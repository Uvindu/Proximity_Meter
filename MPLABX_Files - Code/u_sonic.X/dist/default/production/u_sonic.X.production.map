Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.38\dat\en_msgs.txt -cs \
  -h+dist/default/production\u_sonic.X.production.sym \
  --cmf=dist/default/production\u_sonic.X.production.cmf -z -Q16F887 \
  -oC:\Users\Hiran\AppData\Local\Temp\s8mg.2 \
  -Mdist/default/production/u_sonic.X.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Hiran\AppData\Local\Temp\s8mg.obj \
  dist/default/production\u_sonic.X.production.obj 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Hiran\AppData\Local\Temp\s8mg.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production\u_sonic.X.production.obj
                cinit                                15       15       2D        8       0
                intentry                              4        4        E        8       0
                text36                              89F      89F       6C     113E       0
                text35                             149D     149D       21     293A       0
                text34                              CF2      CF2       B8     19E4       0
                text33                              9F2      9F2       8E     13E4       0
                text32                             15FA     15FA       4C     2BF4       0
                text31                             1505     1505       2E     2A0A       0
                text30                             147D     147D       20     28FA       0
                text29                             1443     1443        B     2886       0
                text28                             179F     179F       61     2F3E       0
                text27                             1693     1693       52     2D26       0
                text26                             15B7     15B7       43     2B6E       0
                text25                             14DF     14DF       26     29BE       0
                text24                             16E5     16E5       5B     2DCA       0
                text23                              90B      90B       6E     1216       0
                text22                              870      870       2F     10E0       0
                text21                              7DB      7DB       25        8       0
                text20                              DAA      DAA       B8     1B54       0
                text19                              5FF      5FF      109        8       0
                text18                             14BE     14BE       21     297C       0
                text17                             144E     144E       13     289C       0
                text16                              708      708       D3        8       0
                text15                              979      979       79     12F2       0
                text14                             1533     1533       42     2A66       0
                text13                             1740     1740       5F     2E80       0
                text12                              A80      A80       8E     1500       0
                text11                             1575     1575       42     2AEA       0
                text10                              B0E      B0E       99     161C       0
                text9                              1439     1439        A     2872       0
                text8                               BA7      BA7       99     174E       0
                text7                               4B7      4B7      148        8       0
                text6                               E62      E62       CE     1CC4       0
                text5                               301      301      1B6        8       0
                text4                               C40      C40       B2     1880       0
                text3                               F30      F30       D0     1E60       0
                text2                              1461     1461       1C     28C2       0
                text1                              1646     1646       4D     2C8C       0
                maintext                             42       42      2BF        8       0
                cstackBANK0                          20       20       24       20       1
                cstackCOMMON                         70       70        E       70       1
                cstackBANK1                          A0       A0       50       A0       1
                cstackBANK3                         190      190       2B      190       1
                dataBANK3                           1BB      1BB        5      190       1
                bssBANK0                             44       44        9       20       1
                strings                             800      800       68     1000       0
                idataBANK3                          86B      86B        5     10D6       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       2D         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text36                              89F      89F       6C         0
                text35                             149D     149D       21         0
                text34                              CF2      CF2       B8         0
                text33                              9F2      9F2       8E         0
                text32                             15FA     15FA       4C         0
                text31                             1505     1505       2E         0
                text30                             147D     147D       20         0
                text29                             1443     1443        B         0
                text28                             179F     179F       61         0
                text27                             1693     1693       52         0
                text26                             15B7     15B7       43         0
                text25                             14DF     14DF       26         0
                text24                             16E5     16E5       5B         0
                text23                              90B      90B       6E         0
                text22                              870      870       2F         0
                text21                              7DB      7DB       25         0
                text20                              DAA      DAA       B8         0
                text19                              5FF      5FF      109         0
                text18                             14BE     14BE       21         0
                text17                             144E     144E       13         0
                text16                              708      708       D3         0
                text15                              979      979       79         0
                text14                             1533     1533       42         0
                text13                             1740     1740       5F         0
                text12                              A80      A80       8E         0
                text11                             1575     1575       42         0
                text10                              B0E      B0E       99         0
                text9                              1439     1439        A         0
                text8                               BA7      BA7       99         0
                text7                               4B7      4B7      148         0
                text6                               E62      E62       CE         0
                text5                               301      301      1B6         0
                text4                               C40      C40       B2         0
                text3                               F30      F30       D0         0
                text2                              1461     1461       1C         0
                text1                              1646     1646       4D         0
                maintext                             42       42      2BF         0
                idataBANK3                          86B      86B        5         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             800      800       68         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       24         1
                bssBANK0                             44       44        9         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       50         1

        CLASS   BANK2          

        CLASS   BANK3          
                cstackBANK3                         190      190       2B         1
                dataBANK3                           1BB      1BB        5         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0007FC  000800         8       0  CODE        2
                cstackBANK0                    000020  00002D  00004D        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                cstackBANK1                    0000A0  000050  0000F0        A0       1  BANK1       1
                cstackBANK3                    000190  000030  0001C0       190       1  BANK3       1
                strings                        000800  000068  000868      1000       0  STRING      2
                idataBANK3                     00086B  000005  000870      10D6       0  CODE        2
                text22                         000870  00002F  00089F      10E0       0  CODE        2
                text36                         00089F  00006C  00090B      113E       0  CODE        2
                text23                         00090B  00006E  000979      1216       0  CODE        2
                text15                         000979  000079  0009F2      12F2       0  CODE        2
                text33                         0009F2  00008E  000A80      13E4       0  CODE        2
                text12                         000A80  00008E  000B0E      1500       0  CODE        2
                text10                         000B0E  000099  000BA7      161C       0  CODE        2
                text8                          000BA7  000099  000C40      174E       0  CODE        2
                text4                          000C40  0000B2  000CF2      1880       0  CODE        2
                text34                         000CF2  0000B8  000DAA      19E4       0  CODE        2
                text20                         000DAA  0000B8  000E62      1B54       0  CODE        2
                text6                          000E62  0000CE  000F30      1CC4       0  CODE        2
                text3                          000F30  0000D0  001000      1E60       0  CODE        2
                text9                          001439  00000A  001443      2872       0  CODE        2
                text29                         001443  00000B  00144E      2886       0  CODE        2
                text17                         00144E  000013  001461      289C       0  CODE        2
                text2                          001461  00001C  00147D      28C2       0  CODE        2
                text30                         00147D  000020  00149D      28FA       0  CODE        2
                text35                         00149D  000021  0014BE      293A       0  CODE        2
                text18                         0014BE  000021  0014DF      297C       0  CODE        2
                text25                         0014DF  000026  001505      29BE       0  CODE        2
                text31                         001505  00002E  001533      2A0A       0  CODE        2
                text14                         001533  000042  001575      2A66       0  CODE        2
                text11                         001575  000042  0015B7      2AEA       0  CODE        2
                text26                         0015B7  000043  0015FA      2B6E       0  CODE        2
                text32                         0015FA  00004C  001646      2BF4       0  CODE        2
                text1                          001646  00004D  001693      2C8C       0  CODE        2
                text27                         001693  000052  0016E5      2D26       0  CODE        2
                text24                         0016E5  00005B  001740      2DCA       0  CODE        2
                text13                         001740  00005F  00179F      2E80       0  CODE        2
                text28                         00179F  000061  001800      2F3E       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            004D-006F             23           1
        BANK2            0110-016F             60           1
        BANK3            01C0-01EF             30           1
        CODE             0003-0003              1           2
                         0868-086A              3
                         1000-1438            439
                         1800-1FFF            800
        CONST            0003-0003              1           2
                         0868-086A              3
                         1000-1438            100
                         1800-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0868-086A              3
                         1000-1438            100
                         1800-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              004D-006F             23           1
                         0110-016F             60
                         01C0-01EF             30
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0868-086A              3
                         1000-1438            439
                         1800-1FFF            800
        STRING           0003-0003              1           2
                         0868-086A              3
                         1000-1438            100
                         1800-1FFF            100

                                  Symbol Table

?_Process                  cstackBANK3  01A9
?___altoft                 cstackBANK1  00CC
?___awdiv                  cstackBANK1  00A0
?___awmod                  cstackBANK1  00A0
?___awtoft                 cstackBANK1  00A8
?___ftadd                  cstackBANK1  00BE
?___ftdiv                  cstackBANK1  00BE
?___ftmul                  cstackBANK1  00AE
?___ftneg                  cstackBANK1  00A0
?___ftpack                 cstackBANK1  00A0
?___ftsub                  cstackBANK1  00CB
?___fttol                  cstackBANK1  00BE
?___lltoft                 cstackBANK1  00A8
?_analogRead               cstackBANK1  00ED
?_eval_poly                cstackBANK1  00CB
?_exp                      cstackBANK1  00DF
?_floor                    cstackBANK1  00D4
?_frexp                    cstackBANK1  00A0
?_ldexp                    cstackBANK1  00D5
?_log                      cstackBANK1  00D5
?_pow                      cstackBANK3  0190
?i1___awtoft               cstackCOMMON 0078
?i1___ftdiv                cstackBANK0  0020
?i1___ftpack               cstackCOMMON 0070
?i1___fttol                cstackBANK0  0030
Lcd_Cmd@a                  cstackBANK1  00A3
Lcd_Port@a                 cstackBANK1  00A0
Lcd_Set_Cursor@a           cstackBANK1  00A7
Lcd_Set_Cursor@b           cstackBANK1  00A4
Lcd_Set_Cursor@temp        cstackBANK1  00AA
Lcd_Set_Cursor@y           cstackBANK1  00A9
Lcd_Set_Cursor@z           cstackBANK1  00A8
Lcd_Write_Char@a           cstackBANK1  00A4
Lcd_Write_Char@temp        cstackBANK1  00A2
Lcd_Write_Char@y           cstackBANK1  00A3
Lcd_Write_String@a         cstackBANK1  00A7
Lcd_Write_String@i         cstackBANK1  00A5
Process@accurateDistance   cstackBANK3  01AE
Process@channel            cstackBANK3  01A9
Process@foo                cstackBANK3  01B6
Process@i                  cstackBANK3  01B2
Process@p                  cstackBANK3  01B0
Process@previousDistance   cstackBANK3  01AC
Process@sum                cstackBANK3  01B4
_ADCON0bits                (abs)        001F
_ADCON1bits                (abs)        009F
_ADRESH                    (abs)        001E
_ADRESL                    (abs)        009E
_ANSEL                     (abs)        0188
_ANSELH                    (abs)        0189
_ANSELbits                 (abs)        0188
_INTCONbits                (abs)        000B
_IOCBbits                  (abs)        0096
_ISR_HANDLER               text32       15FA
_Lcd_Clear                 text29       1443
_Lcd_Cmd                   text30       147D
_Lcd_Init                  text28       179F
_Lcd_Port                  text31       1505
_Lcd_Set_Cursor            text27       1693
_Lcd_Write_Char            text26       15B7
_Lcd_Write_String          text25       14DF
_PORTBbits                 (abs)        0006
_Process                   text3        0F30
_RD2                       (abs)        0042
_RD3                       (abs)        0043
_RD4                       (abs)        0044
_RD5                       (abs)        0045
_RD6                       (abs)        0046
_RD7                       (abs)        0047
_Sharp_Init                text2        1461
_T1CON                     (abs)        0010
_T1CONbits                 (abs)        0010
_TMR1H                     (abs)        000F
_TMR1L                     (abs)        000E
_TRISA                     (abs)        0085
_TRISAbits                 (abs)        0085
_TRISB                     (abs)        0086
_TRISD                     (abs)        0088
__CFG_BOR4V$BOR40V         (abs)        0000
__CFG_BOREN$OFF            (abs)        0000
__CFG_CP$OFF               (abs)        0000
__CFG_CPD$OFF              (abs)        0000
__CFG_FCMEN$OFF            (abs)        0000
__CFG_FOSC$HS              (abs)        0000
__CFG_IESO$OFF             (abs)        0000
__CFG_LVP$OFF              (abs)        0000
__CFG_MCLRE$ON             (abs)        0000
__CFG_PWRTE$OFF            (abs)        0000
__CFG_WDTE$OFF             (abs)        0000
__CFG_WRT$OFF              (abs)        0000
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__HbssBANK0                bssBANK0     0000
__Hcinit                   cinit        0042
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2009
__HcstackBANK0             cstackBANK0  0000
__HcstackBANK1             cstackBANK1  0000
__HcstackBANK3             cstackBANK3  0000
__HcstackCOMMON            cstackCOMMON 0000
__HdataBANK3               dataBANK3    0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     0015
__Hfunctab                 functab      0000
__HidataBANK3              idataBANK3   0000
__Hidloc                   idloc        0000
__Hinit                    init         0012
__Hintentry                intentry     0012
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0003
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        2009
__Hspace_1                 (abs)        01C0
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__LbssBANK0                bssBANK0     0000
__Lcinit                   cinit        0015
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       2007
__LcstackBANK0             cstackBANK0  0000
__LcstackBANK1             cstackBANK1  0000
__LcstackBANK3             cstackBANK3  0000
__LcstackCOMMON            cstackCOMMON 0000
__LdataBANK3               dataBANK3    0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     0012
__Lfunctab                 functab      0000
__LidataBANK3              idataBANK3   0000
__Lidloc                   idloc        0000
__Linit                    init         0012
__Lintentry                intentry     0004
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        2009
__S1                       (abs)        01C0
__S2                       (abs)        0000
__S3                       (abs)        0000
___altoft                  text14       1533
___altoft@c                cstackBANK1  00CC
___altoft@exp              cstackBANK1  00D2
___altoft@sign             cstackBANK1  00D3
___awdiv                   text24       16E5
___awdiv@counter           cstackBANK1  00A5
___awdiv@dividend          cstackBANK1  00A2
___awdiv@divisor           cstackBANK1  00A0
___awdiv@quotient          cstackBANK1  00A7
___awdiv@sign              cstackBANK1  00A6
___awmod                   text1        1646
___awmod@counter           cstackBANK1  00A5
___awmod@dividend          cstackBANK1  00A2
___awmod@divisor           cstackBANK1  00A0
___awmod@sign              cstackBANK1  00A6
___awtoft                  text21       07DB
___awtoft@c                cstackBANK1  00A8
___awtoft@sign             cstackBANK1  00AD
___bmul                    text17       144E
___bmul@multiplicand       cstackBANK1  00A0
___bmul@multiplier         cstackBANK1  00A3
___bmul@product            cstackBANK1  00A2
___ftadd                   text19       05FF
___ftadd@exp1              cstackBANK1  00CA
___ftadd@exp2              cstackBANK1  00C9
___ftadd@f1                cstackBANK1  00BE
___ftadd@f2                cstackBANK1  00C1
___ftadd@sign              cstackBANK1  00C8
___ftdiv                   text20       0DAA
___ftdiv@cntr              cstackBANK1  00C8
___ftdiv@exp               cstackBANK1  00CC
___ftdiv@f1                cstackBANK1  00C1
___ftdiv@f2                cstackBANK1  00BE
___ftdiv@f3                cstackBANK1  00C9
___ftdiv@sign              cstackBANK1  00CD
___ftge                    text13       1740
___ftge@ff1                cstackBANK1  00BE
___ftge@ff2                cstackBANK1  00C1
___ftmul                   text16       0708
___ftmul@cntr              cstackBANK1  00BC
___ftmul@exp               cstackBANK1  00B8
___ftmul@f1                cstackBANK1  00AE
___ftmul@f2                cstackBANK1  00B1
___ftmul@f3_as_product     cstackBANK1  00B9
___ftmul@sign              cstackBANK1  00BD
___ftneg                   text9        1439
___ftneg@f1                cstackBANK1  00A0
___ftpack                  text23       090B
___ftpack@arg              cstackBANK1  00A0
___ftpack@exp              cstackBANK1  00A3
___ftpack@sign             cstackBANK1  00A4
___ftsub                   text18       14BE
___ftsub@f1                cstackBANK1  00CE
___ftsub@f2                cstackBANK1  00CB
___fttol                   text12       0A80
___fttol@exp1              cstackBANK1  00CB
___fttol@f1                cstackBANK1  00BE
___fttol@lval              cstackBANK1  00C7
___fttol@sign1             cstackBANK1  00C6
___int_sp                  stack        0000
___latbits                 (abs)        0002
___lltoft                  text22       0870
___lltoft@c                cstackBANK1  00A8
___lltoft@exp              cstackBANK1  00AD
___sp                      stack        0000
__end_of_ISR_HANDLER       text32       1646
__end_of_Lcd_Clear         text29       144E
__end_of_Lcd_Cmd           text30       149D
__end_of_Lcd_Init          text28       1800
__end_of_Lcd_Port          text31       1533
__end_of_Lcd_Set_Cursor    text27       16E5
__end_of_Lcd_Write_Char    text26       15FA
__end_of_Lcd_Write_String  text25       1505
__end_of_Process           text3        1000
__end_of_Sharp_Init        text2        147D
__end_of___altoft          text14       1575
__end_of___awdiv           text24       1740
__end_of___awmod           text1        1693
__end_of___awtoft          text21       0800
__end_of___bmul            text17       1461
__end_of___ftadd           text19       0708
__end_of___ftdiv           text20       0E62
__end_of___ftge            text13       179F
__end_of___ftmul           text16       07DB
__end_of___ftneg           text9        1443
__end_of___ftpack          text23       0979
__end_of___ftsub           text18       14DF
__end_of___fttol           text12       0B0E
__end_of___lltoft          text22       089F
__end_of__initialization   cinit        003E
__end_of__stringtab        strings      0806
__end_of_analogRead        text4        0CF2
__end_of_eval_poly         text15       09F2
__end_of_exp               text7        05FF
__end_of_floor             text10       0BA7
__end_of_frexp             text11       15B7
__end_of_ldexp             text8        0C40
__end_of_log               text6        0F30
__end_of_main              maintext     0301
__end_of_pow               text5        04B7
__end_ofexp@coeff          strings      0824
__end_ofi1___awtoft        text35       14BE
__end_ofi1___ftdiv         text34       0DAA
__end_ofi1___ftpack        text36       090B
__end_ofi1___fttol         text33       0A80
__end_oflog@coeff          strings      083F
__initialization           cinit        0015
__pbssBANK0                bssBANK0     0044
__pcstackBANK0             cstackBANK0  0020
__pcstackBANK1             cstackBANK1  00A0
__pcstackBANK3             cstackBANK3  0190
__pcstackCOMMON            cstackCOMMON 0070
__pdataBANK3               dataBANK3    01BB
__pidataBANK3              idataBANK3   086B
__pintentry                intentry     0004
__pmaintext                maintext     0042
__pstrings                 strings      0800
__ptext1                   text1        1646
__ptext10                  text10       0B0E
__ptext11                  text11       1575
__ptext12                  text12       0A80
__ptext13                  text13       1740
__ptext14                  text14       1533
__ptext15                  text15       0979
__ptext16                  text16       0708
__ptext17                  text17       144E
__ptext18                  text18       14BE
__ptext19                  text19       05FF
__ptext2                   text2        1461
__ptext20                  text20       0DAA
__ptext21                  text21       07DB
__ptext22                  text22       0870
__ptext23                  text23       090B
__ptext24                  text24       16E5
__ptext25                  text25       14DF
__ptext26                  text26       15B7
__ptext27                  text27       1693
__ptext28                  text28       179F
__ptext29                  text29       1443
__ptext3                   text3        0F30
__ptext30                  text30       147D
__ptext31                  text31       1505
__ptext32                  text32       15FA
__ptext33                  text33       09F2
__ptext34                  text34       0CF2
__ptext35                  text35       149D
__ptext36                  text36       089F
__ptext4                   text4        0C40
__ptext5                   text5        0301
__ptext6                   text6        0E62
__ptext7                   text7        04B7
__ptext8                   text8        0BA7
__ptext9                   text9        1439
__size_of_ISR_HANDLER      (abs)        0000
__size_of_Lcd_Clear        (abs)        0000
__size_of_Lcd_Cmd          (abs)        0000
__size_of_Lcd_Init         (abs)        0000
__size_of_Lcd_Port         (abs)        0000
__size_of_Lcd_Set_Cursor   (abs)        0000
__size_of_Lcd_Write_Char   (abs)        0000
__size_of_Lcd_Write_String (abs)        0000
__size_of_Process          (abs)        0000
__size_of_Sharp_Init       (abs)        0000
__size_of___altoft         (abs)        0000
__size_of___awdiv          (abs)        0000
__size_of___awmod          (abs)        0000
__size_of___awtoft         (abs)        0000
__size_of___bmul           (abs)        0000
__size_of___ftadd          (abs)        0000
__size_of___ftdiv          (abs)        0000
__size_of___ftge           (abs)        0000
__size_of___ftmul          (abs)        0000
__size_of___ftneg          (abs)        0000
__size_of___ftpack         (abs)        0000
__size_of___ftsub          (abs)        0000
__size_of___fttol          (abs)        0000
__size_of___lltoft         (abs)        0000
__size_of_analogRead       (abs)        0000
__size_of_eval_poly        (abs)        0000
__size_of_exp              (abs)        0000
__size_of_floor            (abs)        0000
__size_of_frexp            (abs)        0000
__size_of_ldexp            (abs)        0000
__size_of_log              (abs)        0000
__size_of_main             (abs)        0000
__size_of_pow              (abs)        0000
__size_ofi1___awtoft       (abs)        0000
__size_ofi1___ftdiv        (abs)        0000
__size_ofi1___ftpack       (abs)        0000
__size_ofi1___fttol        (abs)        0000
__stringbase               strings      0805
__stringtab                strings      0800
_a                         bssBANK0     0047
_analogRead                text4        0C40
_analogRead$898            cstackBANK3  01A4
_avg                       dataBANK3    01BE
_errno                     bssBANK0     0049
_eval_poly                 text15       0979
_exp                       text7        04B7
_exp$667                   cstackBANK1  00E6
_exp$901                   cstackBANK1  00E3
_floor                     text10       0B0E
_frexp                     text11       1575
_ldexp                     text8        0BA7
_ldexp$704                 cstackBANK1  00DC
_log                       text6        0E62
_main                      maintext     0042
_pow                       text5        0301
_pow$899                   cstackBANK3  0196
_pow$900                   cstackBANK3  0199
_r                         bssBANK0     004B
_tol                       dataBANK3    01BB
analogRead@channel         cstackBANK1  00ED
analogRead@raw             cstackBANK3  01A7
analogRead@volt            cstackBANK3  01A1
btemp                      (abs)        007E
end_of_initialization      cinit        003E
eval_poly@d                cstackBANK1  00CE
eval_poly@n                cstackBANK1  00CF
eval_poly@res              cstackBANK1  00D2
eval_poly@x                cstackBANK1  00CB
exp@coeff                  strings      0806
exp@exponent               cstackBANK1  00E9
exp@sign                   cstackBANK1  00EB
exp@x                      cstackBANK1  00DF
floor@expon                cstackBANK1  00DB
floor@i                    cstackBANK1  00D8
floor@x                    cstackBANK1  00D4
frexp@eptr                 cstackBANK1  00A3
frexp@value                cstackBANK1  00A0
i1___awtoft                text35       149D
i1___awtoft@c              cstackCOMMON 0078
i1___awtoft@sign           cstackCOMMON 007D
i1___ftdiv                 text34       0CF2
i1___ftdiv@cntr            cstackBANK0  002A
i1___ftdiv@exp             cstackBANK0  002E
i1___ftdiv@f1              cstackBANK0  0023
i1___ftdiv@f2              cstackBANK0  0020
i1___ftdiv@f3              cstackBANK0  002B
i1___ftdiv@sign            cstackBANK0  002F
i1___ftpack                text36       089F
i1___ftpack@arg            cstackCOMMON 0070
i1___ftpack@exp            cstackCOMMON 0073
i1___ftpack@sign           cstackCOMMON 0074
i1___fttol                 text33       09F2
i1___fttol@exp1            cstackBANK0  003D
i1___fttol@f1              cstackBANK0  0030
i1___fttol@lval            cstackBANK0  0039
i1___fttol@sign1           cstackBANK0  0038
interrupt_function         intentry     0004
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
ldexp@newexp               cstackBANK1  00D8
ldexp@value                cstackBANK1  00D5
log@coeff                  strings      0824
log@exponent               cstackBANK1  00D9
log@x                      cstackBANK1  00D5
ltemp                      (abs)        007E
ltemp0                     (abs)        007E
ltemp1                     (abs)        0082
ltemp2                     (abs)        0086
ltemp3                     (abs)        0080
pow@sign                   cstackBANK3  019C
pow@x                      cstackBANK3  0190
pow@y                      cstackBANK3  0193
pow@yi                     cstackBANK3  019D
reset_vec                  reset_vec    0000
saved_w                    (abs)        007E
stackhi                    (abs)        0000
stacklo                    (abs)        0000
start                      init         0012
start_initialization       cinit        0015
ttemp                      (abs)        007E
ttemp0                     (abs)        007E
ttemp1                     (abs)        0081
ttemp2                     (abs)        0084
ttemp3                     (abs)        0087
ttemp4                     (abs)        007F
wtemp                      (abs)        007E
wtemp0                     (abs)        007E
wtemp1                     (abs)        0080
wtemp2                     (abs)        0082
wtemp3                     (abs)        0084
wtemp4                     (abs)        0086
wtemp5                     (abs)        0088
wtemp6                     (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 53 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2  127[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       3       0
      Totals:         0       0       0       3       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:   10
 This function calls:
		_Lcd_Clear
		_Lcd_Init
		_Lcd_Set_Cursor
		_Lcd_Write_Char
		_Lcd_Write_String
		_Process
		_Sharp_Init
		___awdiv
		___awmod
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2    0[BANK1 ] int 
  dividend        2    2[BANK1 ] int 
 Auto vars:     Size  Location     Type
  sign            1    6[BANK1 ] unsigned char 
  counter         1    5[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK1 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       4       0       0
      Locals:         0       0       2       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Sharp_Init *****************
 Defined at:
		line 6 in file "SharpIR.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Process *****************
 Defined at:
		line 39 in file "SharpIR.h"
 Parameters:    Size  Location     Type
  channel         2   25[BANK3 ] int 
 Auto vars:     Size  Location     Type
  foo             2   38[BANK3 ] int 
  i               2   34[BANK3 ] int 
  sum             2   36[BANK3 ] int 
  p               2   32[BANK3 ] int 
  accurateDist    2   30[BANK3 ] int 
  previousDist    2   28[BANK3 ] int 
 Return value:  Size  Location     Type
                  2   25[BANK3 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       2       0
      Locals:         0       0       0      12       0
      Temps:          0       0       0       1       0
      Totals:         0       0       0      15       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		___awdiv
		___awtoft
		___ftge
		___ftmul
		_analogRead
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _analogRead *****************
 Defined at:
		line 24 in file "SharpIR.h"
 Parameters:    Size  Location     Type
  channel         2   77[BANK1 ] int 
 Auto vars:     Size  Location     Type
  volt            3   17[BANK3 ] float 
  raw             2   23[BANK3 ] int 
 Return value:  Size  Location     Type
                  2   77[BANK1 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       2       0       0
      Locals:         0       0       0       8       0
      Temps:          0       0       1       0       0
      Totals:         0       0       3       8       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awtoft
		___ftdiv
		___ftmul
		___fttol
		_pow
 This function is called by:
		_Process
 This function uses a non-reentrant model


 *************** function _pow *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\pow.c"
 Parameters:    Size  Location     Type
  x               3    0[BANK3 ] int 
  y               3    3[BANK3 ] int 
 Auto vars:     Size  Location     Type
  yi              4   13[BANK3 ] unsigned long 
  sign            1   12[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
                  3    0[BANK3 ] unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       6       0
      Locals:         0       0       0      11       0
      Temps:          0       0       1       0       0
      Totals:         0       0       1      17       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		___ftge
		___ftmul
		___ftneg
		___fttol
		___lltoft
		_exp
		_log
 This function is called by:
		_analogRead
 This function uses a non-reentrant model


 *************** function _log *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c"
 Parameters:    Size  Location     Type
  x               3   53[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  exponent        2   57[BANK1 ] int 
 Return value:  Size  Location     Type
                  3   53[BANK1 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       3       0       0
      Locals:         0       0       2       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___awtoft
		___ftadd
		___ftge
		___ftmul
		_eval_poly
		_frexp
 This function is called by:
		_pow
 This function uses a non-reentrant model


 *************** function _exp *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\exp.c"
 Parameters:    Size  Location     Type
  x               3   63[BANK1 ] int 
 Auto vars:     Size  Location     Type
  exponent        2   73[BANK1 ] int 
  sign            1   75[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  3   63[BANK1 ] unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       3       0       0
      Locals:         0       0       9       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0      13       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___awtoft
		___ftdiv
		___ftge
		___ftmul
		___ftneg
		___ftsub
		___fttol
		_eval_poly
		_floor
		_ldexp
 This function is called by:
		_pow
 This function uses a non-reentrant model


 *************** function _ldexp *****************
 Defined at:
		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
 Parameters:    Size  Location     Type
  value           3   53[BANK1 ] unsigned char 
  newexp          2   56[BANK1 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   53[BANK1 ] int 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       5       0       0
      Locals:         0       0       3       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftge
		___ftneg
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function ___ftneg *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
 Parameters:    Size  Location     Type
  f1              3    0[BANK1 ] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[BANK1 ] float 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       3       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_pow
		_exp
		_ldexp
 This function uses a non-reentrant model


 *************** function _floor *****************
 Defined at:
		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\floor.c"
 Parameters:    Size  Location     Type
  x               3   52[BANK1 ] float 
 Auto vars:     Size  Location     Type
  i               3   56[BANK1 ] float 
  expon           2   59[BANK1 ] int 
 Return value:  Size  Location     Type
                  3   52[BANK1 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       3       0       0
      Locals:         0       0       5       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___altoft
		___ftadd
		___ftge
		___fttol
		_frexp
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function _frexp *****************
 Defined at:
		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c"
 Parameters:    Size  Location     Type
  value           3    0[BANK1 ] int 
  eptr            1    3[BANK1 ] PTR int 
		 -> log@exponent(2), floor@expon(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[BANK1 ] PTR int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       4       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_floor
		_log
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
 Parameters:    Size  Location     Type
  f1              3   30[BANK1 ] float 
 Auto vars:     Size  Location     Type
  lval            4   39[BANK1 ] unsigned long 
  exp1            1   43[BANK1 ] unsigned char 
  sign1           1   38[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  4   30[BANK1 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       4       0       0
      Locals:         0       0       6       0       0
      Temps:          0       0       4       0       0
      Totals:         0       0      14       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_analogRead
		_pow
		_exp
		_floor
 This function uses a non-reentrant model


 *************** function ___ftge *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
 Parameters:    Size  Location     Type
  ff1             3   30[BANK1 ] float 
  ff2             3   33[BANK1 ] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       6       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       6       0       0
      Totals:         0       0      12       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_Process
		_pow
		_exp
		_floor
		_ldexp
		_log
 This function uses a non-reentrant model


 *************** function ___altoft *****************
 Defined at:
		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\altoft.c"
 Parameters:    Size  Location     Type
  c               4   44[BANK1 ] long 
 Auto vars:     Size  Location     Type
  sign            1   51[BANK1 ] unsigned char 
  exp             1   50[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  3   44[BANK1 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       4       0       0
      Locals:         0       0       2       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftpack
 This function is called by:
		_floor
 This function uses a non-reentrant model


 *************** function _eval_poly *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c"
 Parameters:    Size  Location     Type
  x               3   43[BANK1 ] float 
  d               1   46[BANK1 ] PTR const 
		 -> log@coeff(27), exp@coeff(30), 
  n               2   47[BANK1 ] int 
 Auto vars:     Size  Location     Type
  res             3   50[BANK1 ] int 
 Return value:  Size  Location     Type
                  3   43[BANK1 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       6       0       0
      Locals:         0       0       3       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___bmul
		___ftadd
		___ftmul
 This function is called by:
		_exp
		_log
 This function uses a non-reentrant model


 *************** function ___ftmul *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
 Parameters:    Size  Location     Type
  f1              3   14[BANK1 ] float 
  f2              3   17[BANK1 ] float 
 Auto vars:     Size  Location     Type
  f3_as_produc    3   25[BANK1 ] unsigned um
  sign            1   29[BANK1 ] unsigned char 
  cntr            1   28[BANK1 ] unsigned char 
  exp             1   24[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  3   14[BANK1 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       6       0       0
      Locals:         0       0       6       0       0
      Temps:          0       0       4       0       0
      Totals:         0       0      16       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftpack
 This function is called by:
		_analogRead
		_Process
		_pow
		_exp
		_log
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___bmul *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    0[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    3[BANK1 ] unsigned char 
  product         1    2[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       1       0       0
      Locals:         0       0       2       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___ftsub *****************
 Defined at:
		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
 Parameters:    Size  Location     Type
  f2              3   43[BANK1 ] float 
  f1              3   46[BANK1 ] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   43[BANK1 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       6       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___ftadd
 This function is called by:
		_exp
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
 Parameters:    Size  Location     Type
  f1              3   30[BANK1 ] float 
  f2              3   33[BANK1 ] float 
 Auto vars:     Size  Location     Type
  exp1            1   42[BANK1 ] unsigned char 
  exp2            1   41[BANK1 ] unsigned char 
  sign            1   40[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  3   30[BANK1 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       6       0       0
      Locals:         0       0       3       0       0
      Temps:          0       0       4       0       0
      Totals:         0       0      13       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftpack
 This function is called by:
		___ftsub
		_floor
		_log
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___ftdiv *****************
 Defined at:
		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
 Parameters:    Size  Location     Type
  f2              3   30[BANK1 ] float 
  f1              3   33[BANK1 ] float 
 Auto vars:     Size  Location     Type
  f3              3   41[BANK1 ] float 
  sign            1   45[BANK1 ] unsigned char 
  exp             1   44[BANK1 ] unsigned char 
  cntr            1   40[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  3   30[BANK1 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       6       0       0
      Locals:         0       0       6       0       0
      Temps:          0       0       4       0       0
      Totals:         0       0      16       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftpack
 This function is called by:
		_analogRead
		_exp
 This function uses a non-reentrant model


 *************** function ___awtoft *****************
 Defined at:
		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
 Parameters:    Size  Location     Type
  c               2    8[BANK1 ] int 
 Auto vars:     Size  Location     Type
  sign            1   13[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  3    8[BANK1 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       3       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftpack
 This function is called by:
		_analogRead
		_Process
		_exp
		_log
 This function uses a non-reentrant model


 *************** function ___lltoft *****************
 Defined at:
		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
 Parameters:    Size  Location     Type
  c               4    8[BANK1 ] unsigned long 
 Auto vars:     Size  Location     Type
  exp             1   13[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  3    8[BANK1 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       4       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftpack
 This function is called by:
		_pow
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 Parameters:    Size  Location     Type
  arg             3    0[BANK1 ] unsigned um
  exp             1    3[BANK1 ] unsigned char 
  sign            1    4[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[BANK1 ] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       5       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       3       0       0
      Totals:         0       0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		___altoft
		___awtoft
		___ftadd
		___ftdiv
		___ftmul
		___lltoft
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[BANK1 ] int 
  dividend        2    2[BANK1 ] int 
 Auto vars:     Size  Location     Type
  quotient        2    7[BANK1 ] int 
  sign            1    6[BANK1 ] unsigned char 
  counter         1    5[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK1 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       4       0       0
      Locals:         0       0       4       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_Process
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 97 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_5(12), STR_4(3), STR_3(12), STR_2(13), 
		 -> STR_1(13), 
 Auto vars:     Size  Location     Type
  a               1    7[BANK1 ] PTR unsigned char 
		 -> STR_5(12), STR_4(3), STR_3(12), STR_2(13), 
		 -> STR_1(13), 
  i               2    5[BANK1 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       3       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 81 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    4[BANK1 ] unsigned char 
  y               1    3[BANK1 ] unsigned char 
  temp            1    2[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       3       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Write_String
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 41 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    4[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    7[BANK1 ] unsigned char 
  temp            1   10[BANK1 ] unsigned char 
  y               1    9[BANK1 ] unsigned char 
  z               1    8[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       1       0       0
      Locals:         0       0       4       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 62 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Cmd
		_Lcd_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Clear *****************
 Defined at:
		line 35 in file "lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   68[None  ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 26 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Clear
		_Lcd_Set_Cursor
		_Lcd_Init
		_Lcd_Shift_Right
		_Lcd_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 4 in file "lcd.h"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    0[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Cmd
		_Lcd_Init
		_Lcd_Write_Char
 This function uses a non-reentrant model


 *************** function _ISR_HANDLER *****************
 Defined at:
		line 35 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       6       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i1___awtoft
		i1___ftdiv
		i1___fttol
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function i1___fttol *****************
 Defined at:
		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
 Parameters:    Size  Location     Type
  f1              3   16[BANK0 ] float 
 Auto vars:     Size  Location     Type
  __fttol         4   25[BANK0 ] unsigned long 
  __fttol         1   29[BANK0 ] unsigned char 
  __fttol         1   24[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   16[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      14       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR_HANDLER
 This function uses a non-reentrant model


 *************** function i1___ftdiv *****************
 Defined at:
		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
 Parameters:    Size  Location     Type
  f2              3    0[BANK0 ] float 
  f1              3    3[BANK0 ] float 
 Auto vars:     Size  Location     Type
  __ftdiv         3   11[BANK0 ] float 
  __ftdiv         1   15[BANK0 ] unsigned char 
  __ftdiv         1   14[BANK0 ] unsigned char 
  __ftdiv         1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3    0[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1___ftpack
 This function is called by:
		_ISR_HANDLER
 This function uses a non-reentrant model


 *************** function i1___awtoft *****************
 Defined at:
		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
 Parameters:    Size  Location     Type
  c               2    8[COMMON] int 
 Auto vars:     Size  Location     Type
  __awtoft        1   13[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMMON] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1___ftpack
 This function is called by:
		_ISR_HANDLER
 This function uses a non-reentrant model


 *************** function i1___ftpack *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
 Parameters:    Size  Location     Type
  arg             3    0[COMMON] unsigned um
  exp             1    3[COMMON] unsigned char 
  sign            1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMMON] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         5       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         8       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i1___awtoft
		i1___ftdiv
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c
		_log           		CODE           	0E62	0000	207

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\log.c estimated size: 207

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c
		___ftsub       		CODE           	14BE	0000	34

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c estimated size: 34

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c
		___ftpack      		CODE           	090B	0000	111

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c estimated size: 111

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c
		___awmod       		CODE           	1646	0000	78

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c estimated size: 78

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\pow.c
		_pow           		CODE           	0301	0000	439

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\pow.c estimated size: 439

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c
		_ldexp         		CODE           	0BA7	0000	154
		_frexp         		CODE           	1575	0000	67

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\frexp.c estimated size: 221

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\floor.c
		_floor         		CODE           	0B0E	0000	154

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\floor.c estimated size: 154

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c
		___ftmul       		CODE           	0708	0000	212

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c estimated size: 212

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c
		___ftdiv       		CODE           	0DAA	0000	185

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c estimated size: 185

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c
		___awdiv       		CODE           	16E5	0000	92

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c estimated size: 92

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c
		___bmul        		CODE           	144E	0000	20

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul8.c estimated size: 20

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c
		___fttol       		CODE           	0A80	0000	143

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c estimated size: 143

shared
		exp@coeff      		STRING         	0806	0000	31
		__stringtab    		STRING         	0800	0000	7
		i1___ftdiv     		CODE           	0CF2	0000	185
		i1___fttol     		CODE           	09F2	0000	143
		i1___awtoft    		CODE           	149D	0000	34
		i1___ftpack    		CODE           	089F	0000	109
		__initialization		CODE           	0015	0000	42
		log@coeff      		STRING         	0824	0000	28

shared estimated size: 579

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c
		___awtoft      		CODE           	07DB	0000	38

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c estimated size: 38

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\altoft.c
		___altoft      		CODE           	1533	0000	67

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\altoft.c estimated size: 67

SharpIR.h
		_Sharp_Init    		CODE           	1461	0000	29
		_Process       		CODE           	0F30	0000	209
		_analogRead    		CODE           	0C40	0000	179

SharpIR.h estimated size: 417

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c
		___ftadd       		CODE           	05FF	0000	266

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c estimated size: 266

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\exp.c
		_exp           		CODE           	04B7	0000	329

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\exp.c estimated size: 329

lcd.h
		_Lcd_Write_String		CODE           	14DF	0000	39
		_Lcd_Init      		CODE           	179F	0000	98
		_Lcd_Write_Char		CODE           	15B7	0000	68
		_Lcd_Cmd       		CODE           	147D	0000	33
		_Lcd_Set_Cursor		CODE           	1693	0000	83
		_Lcd_Clear     		CODE           	1443	0000	12
		_Lcd_Port      		CODE           	1505	0000	47

lcd.h estimated size: 380

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c
		_eval_poly     		CODE           	0979	0000	122

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\evalpoly.c estimated size: 122

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c
		___lltoft      		CODE           	0870	0000	48

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c estimated size: 48

main.c
		_main          		CODE           	0042	0000	704
		_ISR_HANDLER   		CODE           	15FA	0000	77

main.c estimated size: 781

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c
		___ftge        		CODE           	1740	0000	96

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c estimated size: 96

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c
		___ftneg       		CODE           	1439	0000	11

C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c estimated size: 11

