

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Dec 12 21:55:43 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0007                     	;# 
    26  0008                     	;# 
    27  0009                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000D                     	;# 
    32  000E                     	;# 
    33  000E                     	;# 
    34  000F                     	;# 
    35  0010                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0013                     	;# 
    39  0014                     	;# 
    40  0015                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0017                     	;# 
    44  0018                     	;# 
    45  0019                     	;# 
    46  001A                     	;# 
    47  001B                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  001D                     	;# 
    51  001E                     	;# 
    52  001F                     	;# 
    53  0081                     	;# 
    54  0085                     	;# 
    55  0086                     	;# 
    56  0087                     	;# 
    57  0088                     	;# 
    58  0089                     	;# 
    59  008C                     	;# 
    60  008D                     	;# 
    61  008E                     	;# 
    62  008F                     	;# 
    63  0090                     	;# 
    64  0091                     	;# 
    65  0092                     	;# 
    66  0093                     	;# 
    67  0093                     	;# 
    68  0093                     	;# 
    69  0094                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0097                     	;# 
    73  0098                     	;# 
    74  0099                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  0105                     	;# 
    82  0107                     	;# 
    83  0108                     	;# 
    84  0109                     	;# 
    85  010C                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  010F                     	;# 
    90  0185                     	;# 
    91  0187                     	;# 
    92  0188                     	;# 
    93  0189                     	;# 
    94  018C                     	;# 
    95  018D                     	;# 
    96                           
    97                           	psect	strings
    98  0412                     __pstrings:	
    99  0412                     stringtab:	
   100  0412                     __stringtab:	
   101  0412                     stringcode:	
   102                           ;	String table - string pointers are 1 byte each
   103                           
   104  0412                     stringdir:	
   105  0412  3004               	movlw	high stringdir
   106  0413  008A               	movwf	10
   107  0414  0804               	movf	4,w
   108  0415  0A84               	incf	4,f
   109  0416  0782               	addwf	2,f
   110  0417                     __stringbase:	
   111  0417  3400               	retlw	0
   112  0418                     __end_of__stringtab:	
   113  0418                     _total_period:	
   114  0418  34F4               	retlw	244
   115  0419  347E               	retlw	126
   116  041A  3400               	retlw	0
   117  041B  3400               	retlw	0
   118  041C                     __end_of_total_period:	
   119                           
   120                           	psect	nvBANK0
   121  004F                     __pnvBANK0:	
   122  004F                     _current_period:	
   123  004F                     	ds	4
   124  0017                     _CCP1CON	set	23
   125  0016                     _CCPR1H	set	22
   126  0015                     _CCPR1L	set	21
   127  000B                     _INTCON	set	11
   128  0007                     _PORTC	set	7
   129  0010                     _T1CON	set	16
   130  000F                     _TMR1H	set	15
   131  000E                     _TMR1L	set	14
   132  0062                     _CCP1IF	set	98
   133  003A                     _RC2	set	58
   134  0087                     _TRISC	set	135
   135  0462                     _CCP1IE	set	1122
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  0015                     start_initialization:	
   141  0015                     __initialization:	
   142                           
   143                           ; Clear objects allocated to BANK0
   144  0015  01D3               	clrf	__pbssBANK0& (0+127)
   145  0016  01D4               	clrf	(__pbssBANK0+1)& (0+127)
   146  0017  01D5               	clrf	(__pbssBANK0+2)& (0+127)
   147  0018  01D6               	clrf	(__pbssBANK0+3)& (0+127)
   148  0019                     end_of_initialization:	
   149                           ;End of C runtime variable initialization code
   150                           
   151  0019                     __end_of__initialization:	
   152  0019  0183               	clrf	3
   153  001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   154                           
   155                           	psect	bssBANK0
   156  0053                     __pbssBANK0:	
   157  0053                     _CCPR:	
   158  0053                     	ds	4
   159                           
   160                           	psect	cstackCOMMON
   161  0070                     __pcstackCOMMON:	
   162  0070                     ?_tmr1isr:	
   163  0070                     ??_tmr1isr:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  0070                     ?_main:	
   167                           ; 1 bytes @ 0x0
   168                           
   169                           
   170                           ; 1 bytes @ 0x0
   171  0070                     	ds	12
   172                           
   173                           	psect	cstackBANK0
   174  0020                     __pcstackBANK0:	
   175  0020                     ?___ftpack:	
   176  0020                     ___ftpack@arg:	
   177                           ; 3 bytes @ 0x0
   178                           
   179                           
   180                           ; 3 bytes @ 0x0
   181  0020                     	ds	3
   182  0023                     ___ftpack@exp:	
   183                           
   184                           ; 1 bytes @ 0x3
   185  0023                     	ds	1
   186  0024                     ___ftpack@sign:	
   187                           
   188                           ; 1 bytes @ 0x4
   189  0024                     	ds	1
   190  0025                     ??___ftpack:	
   191                           
   192                           ; 1 bytes @ 0x5
   193  0025                     	ds	3
   194  0028                     ?___lltoft:	
   195  0028                     ___lltoft@c:	
   196                           ; 3 bytes @ 0x8
   197                           
   198                           
   199                           ; 4 bytes @ 0x8
   200  0028                     	ds	4
   201  002C                     ??___lltoft:	
   202                           
   203                           ; 1 bytes @ 0xC
   204  002C                     	ds	1
   205  002D                     ___lltoft@exp:	
   206                           
   207                           ; 1 bytes @ 0xD
   208  002D                     	ds	1
   209  002E                     ?___ftmul:	
   210  002E                     ___ftmul@f1:	
   211                           ; 3 bytes @ 0xE
   212                           
   213                           
   214                           ; 3 bytes @ 0xE
   215  002E                     	ds	3
   216  0031                     ___ftmul@f2:	
   217                           
   218                           ; 3 bytes @ 0x11
   219  0031                     	ds	3
   220  0034                     ??___ftmul:	
   221                           
   222                           ; 1 bytes @ 0x14
   223  0034                     	ds	4
   224  0038                     ___ftmul@exp:	
   225                           
   226                           ; 1 bytes @ 0x18
   227  0038                     	ds	1
   228  0039                     ___ftmul@f3_as_product:	
   229                           
   230                           ; 3 bytes @ 0x19
   231  0039                     	ds	3
   232  003C                     ___ftmul@cntr:	
   233                           
   234                           ; 1 bytes @ 0x1C
   235  003C                     	ds	1
   236  003D                     ___ftmul@sign:	
   237                           
   238                           ; 1 bytes @ 0x1D
   239  003D                     	ds	1
   240  003E                     ?___fttol:	
   241  003E                     ___fttol@f1:	
   242                           ; 4 bytes @ 0x1E
   243                           
   244                           
   245                           ; 3 bytes @ 0x1E
   246  003E                     	ds	4
   247  0042                     ??___fttol:	
   248                           
   249                           ; 1 bytes @ 0x22
   250  0042                     	ds	4
   251  0046                     ___fttol@sign1:	
   252                           
   253                           ; 1 bytes @ 0x26
   254  0046                     	ds	1
   255  0047                     ___fttol@lval:	
   256                           
   257                           ; 4 bytes @ 0x27
   258  0047                     	ds	4
   259  004B                     ___fttol@exp1:	
   260                           
   261                           ; 1 bytes @ 0x2B
   262  004B                     	ds	1
   263  004C                     ??_main:	
   264                           
   265                           ; 1 bytes @ 0x2C
   266  004C                     	ds	3
   267                           
   268                           	psect	maintext
   269  001D                     __pmaintext:	
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   272 ;;
   273 ;; *************** function _main *****************
   274 ;; Defined at:
   275 ;;		line 63 in file "pwm_low.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   284 ;; Tracked objects:
   285 ;;		On entry : B00/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   289 ;;      Params:         0       0       0       0       0
   290 ;;      Locals:         0       0       0       0       0
   291 ;;      Temps:          0       3       0       0       0
   292 ;;      Totals:         0       3       0       0       0
   293 ;;Total ram usage:        3 bytes
   294 ;; Hardware stack levels required when called:    4
   295 ;; This function calls:
   296 ;;		___ftmul
   297 ;;		___fttol
   298 ;;		___lltoft
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           
   305                           ;psect for function _main
   306  001D                     _main:	
   307                           
   308                           ;pwm_low.c: 66: TRISC = 0;
   309                           
   310                           ;incstack = 0
   311                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   312  001D  1683               	bsf	3,5	;RP0=1, select bank1
   313  001E  1303               	bcf	3,6	;RP1=0, select bank1
   314  001F  0187               	clrf	7	;volatile
   315                           
   316                           ;pwm_low.c: 67: PORTC = 0;
   317  0020  1283               	bcf	3,5	;RP0=0, select bank0
   318  0021  1303               	bcf	3,6	;RP1=0, select bank0
   319  0022  0187               	clrf	7	;volatile
   320                           
   321                           ;pwm_low.c: 69: T1CON = 0b00110000;
   322  0023  3030               	movlw	48
   323  0024  0090               	movwf	16	;volatile
   324                           
   325                           ;pwm_low.c: 70: TMR1H = 0;
   326  0025  018F               	clrf	15	;volatile
   327                           
   328                           ;pwm_low.c: 71: TMR1L = 0;
   329  0026  018E               	clrf	14	;volatile
   330                           
   331                           ;pwm_low.c: 73: CCP1CON = 0x0b;
   332  0027  300B               	movlw	11
   333  0028  0097               	movwf	23	;volatile
   334                           
   335                           ;pwm_low.c: 74: CCPR = 0;
   336  0029  3000               	movlw	0
   337  002A  00D6               	movwf	_CCPR+3
   338  002B  3000               	movlw	0
   339  002C  00D5               	movwf	_CCPR+2
   340  002D  3000               	movlw	0
   341  002E  00D4               	movwf	_CCPR+1
   342  002F  3000               	movlw	0
   343  0030  00D3               	movwf	_CCPR
   344                           
   345                           ;pwm_low.c: 75: CCP1IF = 0;
   346  0031  110C               	bcf	12,2	;volatile
   347                           
   348                           ;pwm_low.c: 76: CCP1IE = 1;
   349  0032  1683               	bsf	3,5	;RP0=1, select bank1
   350  0033  1303               	bcf	3,6	;RP1=0, select bank1
   351  0034  150C               	bsf	12,2	;volatile
   352                           
   353                           ;pwm_low.c: 77: INTCON = 0xC0;
   354  0035  30C0               	movlw	192
   355  0036  008B               	movwf	11	;volatile
   356                           
   357                           ;pwm_low.c: 78: T1CON = 0b00110001;
   358  0037  3031               	movlw	49
   359  0038  1283               	bcf	3,5	;RP0=0, select bank0
   360  0039  1303               	bcf	3,6	;RP1=0, select bank0
   361  003A  0090               	movwf	16	;volatile
   362  003B                     l884:	
   363                           ;pwm_low.c: 83: while (1) {
   364                           
   365                           
   366                           ;pwm_low.c: 88: current_period = total_period * 0.5;
   367  003B  3001               	movlw	low (_total_period-__stringbase)
   368  003C  0084               	movwf	4
   369  003D  120A  118A  2412  120A  118A  	fcall	stringdir
   370  0042  1283               	bcf	3,5	;RP0=0, select bank0
   371  0043  1303               	bcf	3,6	;RP1=0, select bank0
   372  0044  00A8               	movwf	___lltoft@c
   373  0045  120A  118A  2412  120A  118A  	fcall	stringdir
   374  004A  00A9               	movwf	___lltoft@c+1
   375  004B  120A  118A  2412  120A  118A  	fcall	stringdir
   376  0050  00AA               	movwf	___lltoft@c+2
   377  0051  120A  118A  2412  120A  118A  	fcall	stringdir
   378  0056  00AB               	movwf	___lltoft@c+3
   379  0057  120A  118A  23E3  120A  118A  	fcall	___lltoft
   380  005C  1283               	bcf	3,5	;RP0=0, select bank0
   381  005D  1303               	bcf	3,6	;RP1=0, select bank0
   382  005E  0828               	movf	?___lltoft,w
   383  005F  00B1               	movwf	___ftmul@f2
   384  0060  0829               	movf	?___lltoft+1,w
   385  0061  00B2               	movwf	___ftmul@f2+1
   386  0062  082A               	movf	?___lltoft+2,w
   387  0063  00B3               	movwf	___ftmul@f2+2
   388  0064  3000               	movlw	0
   389  0065  00AE               	movwf	___ftmul@f1
   390  0066  3000               	movlw	0
   391  0067  00AF               	movwf	___ftmul@f1+1
   392  0068  303F               	movlw	63
   393  0069  00B0               	movwf	___ftmul@f1+2
   394  006A  120A  118A  2141  120A  118A  	fcall	___ftmul
   395  006F  1283               	bcf	3,5	;RP0=0, select bank0
   396  0070  1303               	bcf	3,6	;RP1=0, select bank0
   397  0071  082E               	movf	?___ftmul,w
   398  0072  00BE               	movwf	___fttol@f1
   399  0073  082F               	movf	?___ftmul+1,w
   400  0074  00BF               	movwf	___fttol@f1+1
   401  0075  0830               	movf	?___ftmul+2,w
   402  0076  00C0               	movwf	___fttol@f1+2
   403  0077  120A  118A  22E7  120A  118A  	fcall	___fttol
   404  007C  1283               	bcf	3,5	;RP0=0, select bank0
   405  007D  1303               	bcf	3,6	;RP1=0, select bank0
   406  007E  0841               	movf	?___fttol+3,w
   407  007F  00D2               	movwf	_current_period+3
   408  0080  0840               	movf	?___fttol+2,w
   409  0081  00D1               	movwf	_current_period+2
   410  0082  083F               	movf	?___fttol+1,w
   411  0083  00D0               	movwf	_current_period+1
   412  0084  083E               	movf	?___fttol,w
   413  0085  00CF               	movwf	_current_period
   414                           
   415                           ;pwm_low.c: 89: _delay((unsigned long)((5000)*(8000000/4000.0)));
   416  0086  3033               	movlw	51
   417  0087  00CE               	movwf	??_main+2
   418  0088  30BC               	movlw	188
   419  0089  00CD               	movwf	??_main+1
   420  008A  3010               	movlw	16
   421  008B  00CC               	movwf	??_main
   422  008C                     u937:	
   423  008C  0BCC               	decfsz	??_main,f
   424  008D  288C               	goto	u937
   425  008E  0BCD               	decfsz	??_main+1,f
   426  008F  288C               	goto	u937
   427  0090  0BCE               	decfsz	??_main+2,f
   428  0091  288C               	goto	u937
   429                           
   430                           ;pwm_low.c: 90: current_period = total_period * 0.7;
   431  0092  3001               	movlw	low (_total_period-__stringbase)
   432  0093  0084               	movwf	4
   433  0094  120A  118A  2412  120A  118A  	fcall	stringdir
   434  0099  1283               	bcf	3,5	;RP0=0, select bank0
   435  009A  1303               	bcf	3,6	;RP1=0, select bank0
   436  009B  00A8               	movwf	___lltoft@c
   437  009C  120A  118A  2412  120A  118A  	fcall	stringdir
   438  00A1  00A9               	movwf	___lltoft@c+1
   439  00A2  120A  118A  2412  120A  118A  	fcall	stringdir
   440  00A7  00AA               	movwf	___lltoft@c+2
   441  00A8  120A  118A  2412  120A  118A  	fcall	stringdir
   442  00AD  00AB               	movwf	___lltoft@c+3
   443  00AE  120A  118A  23E3  120A  118A  	fcall	___lltoft
   444  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   445  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   446  00B5  0828               	movf	?___lltoft,w
   447  00B6  00B1               	movwf	___ftmul@f2
   448  00B7  0829               	movf	?___lltoft+1,w
   449  00B8  00B2               	movwf	___ftmul@f2+1
   450  00B9  082A               	movf	?___lltoft+2,w
   451  00BA  00B3               	movwf	___ftmul@f2+2
   452  00BB  3033               	movlw	51
   453  00BC  00AE               	movwf	___ftmul@f1
   454  00BD  3033               	movlw	51
   455  00BE  00AF               	movwf	___ftmul@f1+1
   456  00BF  303F               	movlw	63
   457  00C0  00B0               	movwf	___ftmul@f1+2
   458  00C1  120A  118A  2141  120A  118A  	fcall	___ftmul
   459  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   460  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   461  00C8  082E               	movf	?___ftmul,w
   462  00C9  00BE               	movwf	___fttol@f1
   463  00CA  082F               	movf	?___ftmul+1,w
   464  00CB  00BF               	movwf	___fttol@f1+1
   465  00CC  0830               	movf	?___ftmul+2,w
   466  00CD  00C0               	movwf	___fttol@f1+2
   467  00CE  120A  118A  22E7  120A  118A  	fcall	___fttol
   468  00D3  1283               	bcf	3,5	;RP0=0, select bank0
   469  00D4  1303               	bcf	3,6	;RP1=0, select bank0
   470  00D5  0841               	movf	?___fttol+3,w
   471  00D6  00D2               	movwf	_current_period+3
   472  00D7  0840               	movf	?___fttol+2,w
   473  00D8  00D1               	movwf	_current_period+2
   474  00D9  083F               	movf	?___fttol+1,w
   475  00DA  00D0               	movwf	_current_period+1
   476  00DB  083E               	movf	?___fttol,w
   477  00DC  00CF               	movwf	_current_period
   478                           
   479                           ;pwm_low.c: 91: _delay((unsigned long)((5000)*(8000000/4000.0)));
   480  00DD  3033               	movlw	51
   481  00DE  00CE               	movwf	??_main+2
   482  00DF  30BC               	movlw	188
   483  00E0  00CD               	movwf	??_main+1
   484  00E1  3010               	movlw	16
   485  00E2  00CC               	movwf	??_main
   486  00E3                     u947:	
   487  00E3  0BCC               	decfsz	??_main,f
   488  00E4  28E3               	goto	u947
   489  00E5  0BCD               	decfsz	??_main+1,f
   490  00E6  28E3               	goto	u947
   491  00E7  0BCE               	decfsz	??_main+2,f
   492  00E8  28E3               	goto	u947
   493                           
   494                           ;pwm_low.c: 92: current_period = total_period * 0.3;
   495  00E9  3001               	movlw	low (_total_period-__stringbase)
   496  00EA  0084               	movwf	4
   497  00EB  120A  118A  2412  120A  118A  	fcall	stringdir
   498  00F0  1283               	bcf	3,5	;RP0=0, select bank0
   499  00F1  1303               	bcf	3,6	;RP1=0, select bank0
   500  00F2  00A8               	movwf	___lltoft@c
   501  00F3  120A  118A  2412  120A  118A  	fcall	stringdir
   502  00F8  00A9               	movwf	___lltoft@c+1
   503  00F9  120A  118A  2412  120A  118A  	fcall	stringdir
   504  00FE  00AA               	movwf	___lltoft@c+2
   505  00FF  120A  118A  2412  120A  118A  	fcall	stringdir
   506  0104  00AB               	movwf	___lltoft@c+3
   507  0105  120A  118A  23E3  120A  118A  	fcall	___lltoft
   508  010A  1283               	bcf	3,5	;RP0=0, select bank0
   509  010B  1303               	bcf	3,6	;RP1=0, select bank0
   510  010C  0828               	movf	?___lltoft,w
   511  010D  00B1               	movwf	___ftmul@f2
   512  010E  0829               	movf	?___lltoft+1,w
   513  010F  00B2               	movwf	___ftmul@f2+1
   514  0110  082A               	movf	?___lltoft+2,w
   515  0111  00B3               	movwf	___ftmul@f2+2
   516  0112  309A               	movlw	154
   517  0113  00AE               	movwf	___ftmul@f1
   518  0114  3099               	movlw	153
   519  0115  00AF               	movwf	___ftmul@f1+1
   520  0116  303E               	movlw	62
   521  0117  00B0               	movwf	___ftmul@f1+2
   522  0118  120A  118A  2141  120A  118A  	fcall	___ftmul
   523  011D  1283               	bcf	3,5	;RP0=0, select bank0
   524  011E  1303               	bcf	3,6	;RP1=0, select bank0
   525  011F  082E               	movf	?___ftmul,w
   526  0120  00BE               	movwf	___fttol@f1
   527  0121  082F               	movf	?___ftmul+1,w
   528  0122  00BF               	movwf	___fttol@f1+1
   529  0123  0830               	movf	?___ftmul+2,w
   530  0124  00C0               	movwf	___fttol@f1+2
   531  0125  120A  118A  22E7  120A  118A  	fcall	___fttol
   532  012A  1283               	bcf	3,5	;RP0=0, select bank0
   533  012B  1303               	bcf	3,6	;RP1=0, select bank0
   534  012C  0841               	movf	?___fttol+3,w
   535  012D  00D2               	movwf	_current_period+3
   536  012E  0840               	movf	?___fttol+2,w
   537  012F  00D1               	movwf	_current_period+2
   538  0130  083F               	movf	?___fttol+1,w
   539  0131  00D0               	movwf	_current_period+1
   540  0132  083E               	movf	?___fttol,w
   541  0133  00CF               	movwf	_current_period
   542                           
   543                           ;pwm_low.c: 93: _delay((unsigned long)((5000)*(8000000/4000.0)));
   544  0134  3033               	movlw	51
   545  0135  00CE               	movwf	??_main+2
   546  0136  30BC               	movlw	188
   547  0137  00CD               	movwf	??_main+1
   548  0138  3010               	movlw	16
   549  0139  00CC               	movwf	??_main
   550  013A                     u957:	
   551  013A  0BCC               	decfsz	??_main,f
   552  013B  293A               	goto	u957
   553  013C  0BCD               	decfsz	??_main+1,f
   554  013D  293A               	goto	u957
   555  013E  0BCE               	decfsz	??_main+2,f
   556  013F  293A               	goto	u957
   557  0140  283B               	goto	l884
   558  0141                     __end_of_main:	
   559                           
   560                           	psect	text1
   561  03E3                     __ptext1:	
   562 ;; *************** function ___lltoft *****************
   563 ;; Defined at:
   564 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lltoft.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  c               4    8[BANK0 ] unsigned long 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  exp             1   13[BANK0 ] unsigned char 
   569 ;; Return value:  Size  Location     Type
   570 ;;                  3    8[BANK0 ] float 
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0, pclath, cstack
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   578 ;;      Params:         0       4       0       0       0
   579 ;;      Locals:         0       1       0       0       0
   580 ;;      Temps:          0       1       0       0       0
   581 ;;      Totals:         0       6       0       0       0
   582 ;;Total ram usage:        6 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; Hardware stack levels required when called:    3
   585 ;; This function calls:
   586 ;;		___ftpack
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           
   593                           ;psect for function ___lltoft
   594  03E3                     ___lltoft:	
   595                           
   596                           ;incstack = 0
   597                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
   598  03E3  308E               	movlw	142
   599  03E4  1283               	bcf	3,5	;RP0=0, select bank0
   600  03E5  1303               	bcf	3,6	;RP1=0, select bank0
   601  03E6  00AC               	movwf	??___lltoft
   602  03E7  082C               	movf	??___lltoft,w
   603  03E8  00AD               	movwf	___lltoft@exp
   604  03E9                     l830:	
   605  03E9  30FF               	movlw	255
   606  03EA  052B               	andwf	___lltoft@c+3,w
   607  03EB  1903               	btfsc	3,2
   608  03EC  2BFB               	goto	l832
   609  03ED  3001               	movlw	1
   610  03EE                     u835:	
   611  03EE  1003               	clrc
   612  03EF  0CAB               	rrf	___lltoft@c+3,f
   613  03F0  0CAA               	rrf	___lltoft@c+2,f
   614  03F1  0CA9               	rrf	___lltoft@c+1,f
   615  03F2  0CA8               	rrf	___lltoft@c,f
   616  03F3  3EFF               	addlw	-1
   617  03F4  1D03               	skipz
   618  03F5  2BEE               	goto	u835
   619  03F6  3001               	movlw	1
   620  03F7  00AC               	movwf	??___lltoft
   621  03F8  082C               	movf	??___lltoft,w
   622  03F9  07AD               	addwf	___lltoft@exp,f
   623  03FA  2BE9               	goto	l830
   624  03FB                     l832:	
   625  03FB  0828               	movf	___lltoft@c,w
   626  03FC  00A0               	movwf	___ftpack@arg
   627  03FD  0829               	movf	___lltoft@c+1,w
   628  03FE  00A1               	movwf	___ftpack@arg+1
   629  03FF  082A               	movf	___lltoft@c+2,w
   630  0400  00A2               	movwf	___ftpack@arg+2
   631  0401  082D               	movf	___lltoft@exp,w
   632  0402  00AC               	movwf	??___lltoft
   633  0403  082C               	movf	??___lltoft,w
   634  0404  00A3               	movwf	___ftpack@exp
   635  0405  01A4               	clrf	___ftpack@sign
   636  0406  120A  118A  2375   	fcall	___ftpack
   637  0409  1283               	bcf	3,5	;RP0=0, select bank0
   638  040A  1303               	bcf	3,6	;RP1=0, select bank0
   639  040B  0820               	movf	?___ftpack,w
   640  040C  00A8               	movwf	?___lltoft
   641  040D  0821               	movf	?___ftpack+1,w
   642  040E  00A9               	movwf	?___lltoft+1
   643  040F  0822               	movf	?___ftpack+2,w
   644  0410  00AA               	movwf	?___lltoft+2
   645  0411  0008               	return
   646  0412                     __end_of___lltoft:	
   647                           
   648                           	psect	text2
   649  02E7                     __ptext2:	
   650 ;; *************** function ___fttol *****************
   651 ;; Defined at:
   652 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;  f1              3   30[BANK0 ] float 
   655 ;; Auto vars:     Size  Location     Type
   656 ;;  lval            4   39[BANK0 ] unsigned long 
   657 ;;  exp1            1   43[BANK0 ] unsigned char 
   658 ;;  sign1           1   38[BANK0 ] unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;                  4   30[BANK0 ] long 
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       4       0       0       0
   669 ;;      Locals:         0       6       0       0       0
   670 ;;      Temps:          0       4       0       0       0
   671 ;;      Totals:         0      14       0       0       0
   672 ;;Total ram usage:       14 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    2
   675 ;; This function calls:
   676 ;;		Nothing
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           
   683                           ;psect for function ___fttol
   684  02E7                     ___fttol:	
   685                           
   686                           ;incstack = 0
   687                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   688  02E7  1283               	bcf	3,5	;RP0=0, select bank0
   689  02E8  1303               	bcf	3,6	;RP1=0, select bank0
   690  02E9  083E               	movf	___fttol@f1,w
   691  02EA  00C2               	movwf	??___fttol
   692  02EB  083F               	movf	___fttol@f1+1,w
   693  02EC  00C3               	movwf	??___fttol+1
   694  02ED  0840               	movf	___fttol@f1+2,w
   695  02EE  00C4               	movwf	??___fttol+2
   696  02EF  1003               	clrc
   697  02F0  0D43               	rlf	??___fttol+1,w
   698  02F1  0D44               	rlf	??___fttol+2,w
   699  02F2  00C5               	movwf	??___fttol+3
   700  02F3  0845               	movf	??___fttol+3,w
   701  02F4  00CB               	movwf	___fttol@exp1
   702  02F5  084B               	movf	___fttol@exp1,w
   703  02F6  1D03               	btfss	3,2
   704  02F7  2B01               	goto	l790
   705  02F8  3000               	movlw	0
   706  02F9  00C1               	movwf	?___fttol+3
   707  02FA  3000               	movlw	0
   708  02FB  00C0               	movwf	?___fttol+2
   709  02FC  3000               	movlw	0
   710  02FD  00BF               	movwf	?___fttol+1
   711  02FE  3000               	movlw	0
   712  02FF  00BE               	movwf	?___fttol
   713  0300  0008               	return
   714  0301                     l790:	
   715  0301  083E               	movf	___fttol@f1,w
   716  0302  00C2               	movwf	??___fttol
   717  0303  083F               	movf	___fttol@f1+1,w
   718  0304  00C3               	movwf	??___fttol+1
   719  0305  0840               	movf	___fttol@f1+2,w
   720  0306  00C4               	movwf	??___fttol+2
   721  0307  3017               	movlw	23
   722  0308                     u745:	
   723  0308  1003               	clrc
   724  0309  0CC4               	rrf	??___fttol+2,f
   725  030A  0CC3               	rrf	??___fttol+1,f
   726  030B  0CC2               	rrf	??___fttol,f
   727  030C  3EFF               	addlw	-1
   728  030D  1D03               	skipz
   729  030E  2B08               	goto	u745
   730  030F  0842               	movf	??___fttol,w
   731  0310  00C5               	movwf	??___fttol+3
   732  0311  0845               	movf	??___fttol+3,w
   733  0312  00C6               	movwf	___fttol@sign1
   734  0313  17BF               	bsf	___fttol@f1+1,7
   735  0314  30FF               	movlw	255
   736  0315  05BE               	andwf	___fttol@f1,f
   737  0316  30FF               	movlw	255
   738  0317  05BF               	andwf	___fttol@f1+1,f
   739  0318  3000               	movlw	0
   740  0319  05C0               	andwf	___fttol@f1+2,f
   741  031A  083E               	movf	___fttol@f1,w
   742  031B  00C7               	movwf	___fttol@lval
   743  031C  083F               	movf	___fttol@f1+1,w
   744  031D  00C8               	movwf	___fttol@lval+1
   745  031E  0840               	movf	___fttol@f1+2,w
   746  031F  00C9               	movwf	___fttol@lval+2
   747  0320  01CA               	clrf	___fttol@lval+3
   748  0321  308E               	movlw	142
   749  0322  02CB               	subwf	___fttol@exp1,f
   750  0323  1FCB               	btfss	___fttol@exp1,7
   751  0324  2B43               	goto	l810
   752  0325  084B               	movf	___fttol@exp1,w
   753  0326  3A80               	xorlw	128
   754  0327  3E8F               	addlw	143
   755  0328  1803               	skipnc
   756  0329  2B33               	goto	l808
   757  032A  3000               	movlw	0
   758  032B  00C1               	movwf	?___fttol+3
   759  032C  3000               	movlw	0
   760  032D  00C0               	movwf	?___fttol+2
   761  032E  3000               	movlw	0
   762  032F  00BF               	movwf	?___fttol+1
   763  0330  3000               	movlw	0
   764  0331  00BE               	movwf	?___fttol
   765  0332  0008               	return
   766  0333                     l808:	
   767  0333  3001               	movlw	1
   768  0334                     u775:	
   769  0334  1003               	clrc
   770  0335  0CCA               	rrf	___fttol@lval+3,f
   771  0336  0CC9               	rrf	___fttol@lval+2,f
   772  0337  0CC8               	rrf	___fttol@lval+1,f
   773  0338  0CC7               	rrf	___fttol@lval,f
   774  0339  3EFF               	addlw	-1
   775  033A  1D03               	skipz
   776  033B  2B34               	goto	u775
   777  033C  3001               	movlw	1
   778  033D  00C2               	movwf	??___fttol
   779  033E  0842               	movf	??___fttol,w
   780  033F  07CB               	addwf	___fttol@exp1,f
   781  0340  1903               	btfsc	3,2
   782  0341  2B5E               	goto	l818
   783  0342  2B33               	goto	l808
   784  0343                     l810:	
   785  0343  3018               	movlw	24
   786  0344  024B               	subwf	___fttol@exp1,w
   787  0345  1C03               	skipc
   788  0346  2B5B               	goto	l384
   789  0347  3000               	movlw	0
   790  0348  00C1               	movwf	?___fttol+3
   791  0349  3000               	movlw	0
   792  034A  00C0               	movwf	?___fttol+2
   793  034B  3000               	movlw	0
   794  034C  00BF               	movwf	?___fttol+1
   795  034D  3000               	movlw	0
   796  034E  00BE               	movwf	?___fttol
   797  034F  0008               	return
   798  0350                     l816:	
   799  0350  3001               	movlw	1
   800  0351  00C2               	movwf	??___fttol
   801  0352                     u805:	
   802  0352  1003               	clrc
   803  0353  0DC7               	rlf	___fttol@lval,f
   804  0354  0DC8               	rlf	___fttol@lval+1,f
   805  0355  0DC9               	rlf	___fttol@lval+2,f
   806  0356  0DCA               	rlf	___fttol@lval+3,f
   807  0357  0BC2               	decfsz	??___fttol,f
   808  0358  2B52               	goto	u805
   809  0359  3001               	movlw	1
   810  035A  02CB               	subwf	___fttol@exp1,f
   811  035B                     l384:	
   812  035B  084B               	movf	___fttol@exp1,w
   813  035C  1D03               	btfss	3,2
   814  035D  2B50               	goto	l816
   815  035E                     l818:	
   816  035E  0846               	movf	___fttol@sign1,w
   817  035F  1903               	btfsc	3,2
   818  0360  2B6C               	goto	l822
   819  0361  09C7               	comf	___fttol@lval,f
   820  0362  09C8               	comf	___fttol@lval+1,f
   821  0363  09C9               	comf	___fttol@lval+2,f
   822  0364  09CA               	comf	___fttol@lval+3,f
   823  0365  0AC7               	incf	___fttol@lval,f
   824  0366  1903               	skipnz
   825  0367  0AC8               	incf	___fttol@lval+1,f
   826  0368  1903               	skipnz
   827  0369  0AC9               	incf	___fttol@lval+2,f
   828  036A  1903               	skipnz
   829  036B  0ACA               	incf	___fttol@lval+3,f
   830  036C                     l822:	
   831  036C  084A               	movf	___fttol@lval+3,w
   832  036D  00C1               	movwf	?___fttol+3
   833  036E  0849               	movf	___fttol@lval+2,w
   834  036F  00C0               	movwf	?___fttol+2
   835  0370  0848               	movf	___fttol@lval+1,w
   836  0371  00BF               	movwf	?___fttol+1
   837  0372  0847               	movf	___fttol@lval,w
   838  0373  00BE               	movwf	?___fttol
   839  0374  0008               	return
   840  0375                     __end_of___fttol:	
   841                           
   842                           	psect	text3
   843  0141                     __ptext3:	
   844 ;; *************** function ___ftmul *****************
   845 ;; Defined at:
   846 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  f1              3   14[BANK0 ] float 
   849 ;;  f2              3   17[BANK0 ] float 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
   852 ;;  sign            1   29[BANK0 ] unsigned char 
   853 ;;  cntr            1   28[BANK0 ] unsigned char 
   854 ;;  exp             1   24[BANK0 ] unsigned char 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  3   14[BANK0 ] float 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0, pclath, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       6       0       0       0
   865 ;;      Locals:         0       6       0       0       0
   866 ;;      Temps:          0       4       0       0       0
   867 ;;      Totals:         0      16       0       0       0
   868 ;;Total ram usage:       16 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:    3
   871 ;; This function calls:
   872 ;;		___ftpack
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           
   879                           ;psect for function ___ftmul
   880  0141                     ___ftmul:	
   881                           
   882                           ;incstack = 0
   883                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
   884  0141  1283               	bcf	3,5	;RP0=0, select bank0
   885  0142  1303               	bcf	3,6	;RP1=0, select bank0
   886  0143  082E               	movf	___ftmul@f1,w
   887  0144  00B4               	movwf	??___ftmul
   888  0145  082F               	movf	___ftmul@f1+1,w
   889  0146  00B5               	movwf	??___ftmul+1
   890  0147  0830               	movf	___ftmul@f1+2,w
   891  0148  00B6               	movwf	??___ftmul+2
   892  0149  1003               	clrc
   893  014A  0D35               	rlf	??___ftmul+1,w
   894  014B  0D36               	rlf	??___ftmul+2,w
   895  014C  00B7               	movwf	??___ftmul+3
   896  014D  0837               	movf	??___ftmul+3,w
   897  014E  00B8               	movwf	___ftmul@exp
   898  014F  0838               	movf	___ftmul@exp,w
   899  0150  1D03               	btfss	3,2
   900  0151  2959               	goto	l740
   901  0152  3000               	movlw	0
   902  0153  00AE               	movwf	?___ftmul
   903  0154  3000               	movlw	0
   904  0155  00AF               	movwf	?___ftmul+1
   905  0156  3000               	movlw	0
   906  0157  00B0               	movwf	?___ftmul+2
   907  0158  0008               	return
   908  0159                     l740:	
   909  0159  0831               	movf	___ftmul@f2,w
   910  015A  00B4               	movwf	??___ftmul
   911  015B  0832               	movf	___ftmul@f2+1,w
   912  015C  00B5               	movwf	??___ftmul+1
   913  015D  0833               	movf	___ftmul@f2+2,w
   914  015E  00B6               	movwf	??___ftmul+2
   915  015F  1003               	clrc
   916  0160  0D35               	rlf	??___ftmul+1,w
   917  0161  0D36               	rlf	??___ftmul+2,w
   918  0162  00B7               	movwf	??___ftmul+3
   919  0163  0837               	movf	??___ftmul+3,w
   920  0164  00BD               	movwf	___ftmul@sign
   921  0165  083D               	movf	___ftmul@sign,w
   922  0166  1D03               	btfss	3,2
   923  0167  296F               	goto	l746
   924  0168  3000               	movlw	0
   925  0169  00AE               	movwf	?___ftmul
   926  016A  3000               	movlw	0
   927  016B  00AF               	movwf	?___ftmul+1
   928  016C  3000               	movlw	0
   929  016D  00B0               	movwf	?___ftmul+2
   930  016E  0008               	return
   931  016F                     l746:	
   932  016F  083D               	movf	___ftmul@sign,w
   933  0170  3E7B               	addlw	123
   934  0171  00B4               	movwf	??___ftmul
   935  0172  0834               	movf	??___ftmul,w
   936  0173  07B8               	addwf	___ftmul@exp,f
   937  0174  082E               	movf	___ftmul@f1,w
   938  0175  00B4               	movwf	??___ftmul
   939  0176  082F               	movf	___ftmul@f1+1,w
   940  0177  00B5               	movwf	??___ftmul+1
   941  0178  0830               	movf	___ftmul@f1+2,w
   942  0179  00B6               	movwf	??___ftmul+2
   943  017A  3010               	movlw	16
   944  017B                     u615:	
   945  017B  1003               	clrc
   946  017C  0CB6               	rrf	??___ftmul+2,f
   947  017D  0CB5               	rrf	??___ftmul+1,f
   948  017E  0CB4               	rrf	??___ftmul,f
   949  017F  3EFF               	addlw	-1
   950  0180  1D03               	skipz
   951  0181  297B               	goto	u615
   952  0182  0834               	movf	??___ftmul,w
   953  0183  00B7               	movwf	??___ftmul+3
   954  0184  0837               	movf	??___ftmul+3,w
   955  0185  00BD               	movwf	___ftmul@sign
   956  0186  0831               	movf	___ftmul@f2,w
   957  0187  00B4               	movwf	??___ftmul
   958  0188  0832               	movf	___ftmul@f2+1,w
   959  0189  00B5               	movwf	??___ftmul+1
   960  018A  0833               	movf	___ftmul@f2+2,w
   961  018B  00B6               	movwf	??___ftmul+2
   962  018C  3010               	movlw	16
   963  018D                     u625:	
   964  018D  1003               	clrc
   965  018E  0CB6               	rrf	??___ftmul+2,f
   966  018F  0CB5               	rrf	??___ftmul+1,f
   967  0190  0CB4               	rrf	??___ftmul,f
   968  0191  3EFF               	addlw	-1
   969  0192  1D03               	skipz
   970  0193  298D               	goto	u625
   971  0194  0834               	movf	??___ftmul,w
   972  0195  00B7               	movwf	??___ftmul+3
   973  0196  0837               	movf	??___ftmul+3,w
   974  0197  06BD               	xorwf	___ftmul@sign,f
   975  0198  3080               	movlw	128
   976  0199  00B4               	movwf	??___ftmul
   977  019A  0834               	movf	??___ftmul,w
   978  019B  05BD               	andwf	___ftmul@sign,f
   979  019C  17AF               	bsf	___ftmul@f1+1,7
   980  019D  17B2               	bsf	___ftmul@f2+1,7
   981  019E  30FF               	movlw	255
   982  019F  05B1               	andwf	___ftmul@f2,f
   983  01A0  30FF               	movlw	255
   984  01A1  05B2               	andwf	___ftmul@f2+1,f
   985  01A2  3000               	movlw	0
   986  01A3  05B3               	andwf	___ftmul@f2+2,f
   987  01A4  3000               	movlw	0
   988  01A5  00B9               	movwf	___ftmul@f3_as_product
   989  01A6  3000               	movlw	0
   990  01A7  00BA               	movwf	___ftmul@f3_as_product+1
   991  01A8  3000               	movlw	0
   992  01A9  00BB               	movwf	___ftmul@f3_as_product+2
   993  01AA  3007               	movlw	7
   994  01AB  00B4               	movwf	??___ftmul
   995  01AC  0834               	movf	??___ftmul,w
   996  01AD  00BC               	movwf	___ftmul@cntr
   997  01AE                     l758:	
   998  01AE  1C2E               	btfss	___ftmul@f1,0
   999  01AF  29BE               	goto	l762
  1000  01B0  0831               	movf	___ftmul@f2,w
  1001  01B1  07B9               	addwf	___ftmul@f3_as_product,f
  1002  01B2  0832               	movf	___ftmul@f2+1,w
  1003  01B3  1103               	clrz
  1004  01B4  1803               	skipnc
  1005  01B5  0A32               	incf	___ftmul@f2+1,w
  1006  01B6  1D03               	btfss	3,2
  1007  01B7  07BA               	addwf	___ftmul@f3_as_product+1,f
  1008  01B8  0833               	movf	___ftmul@f2+2,w
  1009  01B9  1103               	clrz
  1010  01BA  1803               	skipnc
  1011  01BB  0A33               	incf	___ftmul@f2+2,w
  1012  01BC  1D03               	btfss	3,2
  1013  01BD  07BB               	addwf	___ftmul@f3_as_product+2,f
  1014  01BE                     l762:	
  1015  01BE  3001               	movlw	1
  1016  01BF                     u655:	
  1017  01BF  1003               	clrc
  1018  01C0  0CB0               	rrf	___ftmul@f1+2,f
  1019  01C1  0CAF               	rrf	___ftmul@f1+1,f
  1020  01C2  0CAE               	rrf	___ftmul@f1,f
  1021  01C3  3EFF               	addlw	-1
  1022  01C4  1D03               	skipz
  1023  01C5  29BF               	goto	u655
  1024  01C6  3001               	movlw	1
  1025  01C7                     u665:	
  1026  01C7  1003               	clrc
  1027  01C8  0DB1               	rlf	___ftmul@f2,f
  1028  01C9  0DB2               	rlf	___ftmul@f2+1,f
  1029  01CA  0DB3               	rlf	___ftmul@f2+2,f
  1030  01CB  3EFF               	addlw	-1
  1031  01CC  1D03               	skipz
  1032  01CD  29C7               	goto	u665
  1033  01CE  3001               	movlw	1
  1034  01CF  02BC               	subwf	___ftmul@cntr,f
  1035  01D0  1D03               	btfss	3,2
  1036  01D1  29AE               	goto	l758
  1037  01D2  3009               	movlw	9
  1038  01D3  00B4               	movwf	??___ftmul
  1039  01D4  0834               	movf	??___ftmul,w
  1040  01D5  00BC               	movwf	___ftmul@cntr
  1041  01D6                     l770:	
  1042  01D6  1C2E               	btfss	___ftmul@f1,0
  1043  01D7  29E6               	goto	l774
  1044  01D8  0831               	movf	___ftmul@f2,w
  1045  01D9  07B9               	addwf	___ftmul@f3_as_product,f
  1046  01DA  0832               	movf	___ftmul@f2+1,w
  1047  01DB  1103               	clrz
  1048  01DC  1803               	skipnc
  1049  01DD  0A32               	incf	___ftmul@f2+1,w
  1050  01DE  1D03               	btfss	3,2
  1051  01DF  07BA               	addwf	___ftmul@f3_as_product+1,f
  1052  01E0  0833               	movf	___ftmul@f2+2,w
  1053  01E1  1103               	clrz
  1054  01E2  1803               	skipnc
  1055  01E3  0A33               	incf	___ftmul@f2+2,w
  1056  01E4  1D03               	btfss	3,2
  1057  01E5  07BB               	addwf	___ftmul@f3_as_product+2,f
  1058  01E6                     l774:	
  1059  01E6  3001               	movlw	1
  1060  01E7                     u705:	
  1061  01E7  1003               	clrc
  1062  01E8  0CB0               	rrf	___ftmul@f1+2,f
  1063  01E9  0CAF               	rrf	___ftmul@f1+1,f
  1064  01EA  0CAE               	rrf	___ftmul@f1,f
  1065  01EB  3EFF               	addlw	-1
  1066  01EC  1D03               	skipz
  1067  01ED  29E7               	goto	u705
  1068  01EE  3001               	movlw	1
  1069  01EF                     u715:	
  1070  01EF  1003               	clrc
  1071  01F0  0CBB               	rrf	___ftmul@f3_as_product+2,f
  1072  01F1  0CBA               	rrf	___ftmul@f3_as_product+1,f
  1073  01F2  0CB9               	rrf	___ftmul@f3_as_product,f
  1074  01F3  3EFF               	addlw	-1
  1075  01F4  1D03               	skipz
  1076  01F5  29EF               	goto	u715
  1077  01F6  3001               	movlw	1
  1078  01F7  02BC               	subwf	___ftmul@cntr,f
  1079  01F8  1D03               	btfss	3,2
  1080  01F9  29D6               	goto	l770
  1081  01FA  0839               	movf	___ftmul@f3_as_product,w
  1082  01FB  00A0               	movwf	___ftpack@arg
  1083  01FC  083A               	movf	___ftmul@f3_as_product+1,w
  1084  01FD  00A1               	movwf	___ftpack@arg+1
  1085  01FE  083B               	movf	___ftmul@f3_as_product+2,w
  1086  01FF  00A2               	movwf	___ftpack@arg+2
  1087  0200  0838               	movf	___ftmul@exp,w
  1088  0201  00B4               	movwf	??___ftmul
  1089  0202  0834               	movf	??___ftmul,w
  1090  0203  00A3               	movwf	___ftpack@exp
  1091  0204  083D               	movf	___ftmul@sign,w
  1092  0205  00B5               	movwf	??___ftmul+1
  1093  0206  0835               	movf	??___ftmul+1,w
  1094  0207  00A4               	movwf	___ftpack@sign
  1095  0208  120A  118A  2375   	fcall	___ftpack
  1096  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1097  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1098  020D  0820               	movf	?___ftpack,w
  1099  020E  00AE               	movwf	?___ftmul
  1100  020F  0821               	movf	?___ftpack+1,w
  1101  0210  00AF               	movwf	?___ftmul+1
  1102  0211  0822               	movf	?___ftpack+2,w
  1103  0212  00B0               	movwf	?___ftmul+2
  1104  0213  0008               	return
  1105  0214                     __end_of___ftmul:	
  1106                           
  1107                           	psect	text4
  1108  0375                     __ptext4:	
  1109 ;; *************** function ___ftpack *****************
  1110 ;; Defined at:
  1111 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  arg             3    0[BANK0 ] unsigned um
  1114 ;;  exp             1    3[BANK0 ] unsigned char 
  1115 ;;  sign            1    4[BANK0 ] unsigned char 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  3    0[BANK0 ] float 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         0       5       0       0       0
  1128 ;;      Locals:         0       0       0       0       0
  1129 ;;      Temps:          0       3       0       0       0
  1130 ;;      Totals:         0       8       0       0       0
  1131 ;;Total ram usage:        8 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:    2
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		___ftmul
  1138 ;;		___lltoft
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           
  1143                           ;psect for function ___ftpack
  1144  0375                     ___ftpack:	
  1145                           
  1146                           ;incstack = 0
  1147                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  1148  0375  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0376  1303               	bcf	3,6	;RP1=0, select bank0
  1150  0377  0823               	movf	___ftpack@exp,w
  1151  0378  1903               	btfsc	3,2
  1152  0379  2B7F               	goto	l706
  1153  037A  0822               	movf	___ftpack@arg+2,w
  1154  037B  0421               	iorwf	___ftpack@arg+1,w
  1155  037C  0420               	iorwf	___ftpack@arg,w
  1156  037D  1D03               	skipz
  1157  037E  2B92               	goto	l712
  1158  037F                     l706:	
  1159  037F  3000               	movlw	0
  1160  0380  00A0               	movwf	?___ftpack
  1161  0381  3000               	movlw	0
  1162  0382  00A1               	movwf	?___ftpack+1
  1163  0383  3000               	movlw	0
  1164  0384  00A2               	movwf	?___ftpack+2
  1165  0385  0008               	return
  1166  0386                     l710:	
  1167  0386  3001               	movlw	1
  1168  0387  00A5               	movwf	??___ftpack
  1169  0388  0825               	movf	??___ftpack,w
  1170  0389  07A3               	addwf	___ftpack@exp,f
  1171  038A  3001               	movlw	1
  1172  038B                     u495:	
  1173  038B  1003               	clrc
  1174  038C  0CA2               	rrf	___ftpack@arg+2,f
  1175  038D  0CA1               	rrf	___ftpack@arg+1,f
  1176  038E  0CA0               	rrf	___ftpack@arg,f
  1177  038F  3EFF               	addlw	-1
  1178  0390  1D03               	skipz
  1179  0391  2B8B               	goto	u495
  1180  0392                     l712:	
  1181  0392  30FE               	movlw	254
  1182  0393  0522               	andwf	___ftpack@arg+2,w
  1183  0394  1903               	btfsc	3,2
  1184  0395  2BAD               	goto	l293
  1185  0396  2B86               	goto	l710
  1186  0397                     l714:	
  1187  0397  3001               	movlw	1
  1188  0398  00A5               	movwf	??___ftpack
  1189  0399  0825               	movf	??___ftpack,w
  1190  039A  07A3               	addwf	___ftpack@exp,f
  1191  039B  3001               	movlw	1
  1192  039C  07A0               	addwf	___ftpack@arg,f
  1193  039D  3000               	movlw	0
  1194  039E  1803               	skipnc
  1195  039F  3001               	movlw	1
  1196  03A0  07A1               	addwf	___ftpack@arg+1,f
  1197  03A1  3000               	movlw	0
  1198  03A2  1803               	skipnc
  1199  03A3  3001               	movlw	1
  1200  03A4  07A2               	addwf	___ftpack@arg+2,f
  1201  03A5  3001               	movlw	1
  1202  03A6                     u515:	
  1203  03A6  1003               	clrc
  1204  03A7  0CA2               	rrf	___ftpack@arg+2,f
  1205  03A8  0CA1               	rrf	___ftpack@arg+1,f
  1206  03A9  0CA0               	rrf	___ftpack@arg,f
  1207  03AA  3EFF               	addlw	-1
  1208  03AB  1D03               	skipz
  1209  03AC  2BA6               	goto	u515
  1210  03AD                     l293:	
  1211  03AD  30FF               	movlw	255
  1212  03AE  0522               	andwf	___ftpack@arg+2,w
  1213  03AF  1903               	btfsc	3,2
  1214  03B0  2BBC               	goto	l722
  1215  03B1  2B97               	goto	l714
  1216  03B2                     l720:	
  1217  03B2  3001               	movlw	1
  1218  03B3  02A3               	subwf	___ftpack@exp,f
  1219  03B4  3001               	movlw	1
  1220  03B5                     u535:	
  1221  03B5  1003               	clrc
  1222  03B6  0DA0               	rlf	___ftpack@arg,f
  1223  03B7  0DA1               	rlf	___ftpack@arg+1,f
  1224  03B8  0DA2               	rlf	___ftpack@arg+2,f
  1225  03B9  3EFF               	addlw	-1
  1226  03BA  1D03               	skipz
  1227  03BB  2BB5               	goto	u535
  1228  03BC                     l722:	
  1229  03BC  1BA1               	btfsc	___ftpack@arg+1,7
  1230  03BD  2BC2               	goto	l300
  1231  03BE  3002               	movlw	2
  1232  03BF  0223               	subwf	___ftpack@exp,w
  1233  03C0  1803               	skipnc
  1234  03C1  2BB2               	goto	l720
  1235  03C2                     l300:	
  1236  03C2  1823               	btfsc	___ftpack@exp,0
  1237  03C3  2BCA               	goto	l301
  1238  03C4  30FF               	movlw	255
  1239  03C5  05A0               	andwf	___ftpack@arg,f
  1240  03C6  307F               	movlw	127
  1241  03C7  05A1               	andwf	___ftpack@arg+1,f
  1242  03C8  30FF               	movlw	255
  1243  03C9  05A2               	andwf	___ftpack@arg+2,f
  1244  03CA                     l301:	
  1245  03CA  1003               	clrc
  1246  03CB  0CA3               	rrf	___ftpack@exp,f
  1247  03CC  0823               	movf	___ftpack@exp,w
  1248  03CD  00A5               	movwf	??___ftpack
  1249  03CE  01A6               	clrf	??___ftpack+1
  1250  03CF  01A7               	clrf	??___ftpack+2
  1251  03D0  3010               	movlw	16
  1252  03D1                     u575:	
  1253  03D1  1003               	clrc
  1254  03D2  0DA5               	rlf	??___ftpack,f
  1255  03D3  0DA6               	rlf	??___ftpack+1,f
  1256  03D4  0DA7               	rlf	??___ftpack+2,f
  1257  03D5  3EFF               	addlw	-1
  1258  03D6  1D03               	skipz
  1259  03D7  2BD1               	goto	u575
  1260  03D8  0825               	movf	??___ftpack,w
  1261  03D9  04A0               	iorwf	___ftpack@arg,f
  1262  03DA  0826               	movf	??___ftpack+1,w
  1263  03DB  04A1               	iorwf	___ftpack@arg+1,f
  1264  03DC  0827               	movf	??___ftpack+2,w
  1265  03DD  04A2               	iorwf	___ftpack@arg+2,f
  1266  03DE  0824               	movf	___ftpack@sign,w
  1267  03DF  1903               	btfsc	3,2
  1268  03E0  0008               	return
  1269  03E1  17A2               	bsf	___ftpack@arg+2,7
  1270  03E2  0008               	return
  1271  03E3                     __end_of___ftpack:	
  1272                           
  1273                           	psect	text5
  1274  0214                     __ptext5:	
  1275 ;; *************** function _tmr1isr *****************
  1276 ;; Defined at:
  1277 ;;		line 31 in file "pwm_low.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1291 ;;      Params:         0       0       0       0       0
  1292 ;;      Locals:         0       0       0       0       0
  1293 ;;      Temps:         12       0       0       0       0
  1294 ;;      Totals:        12       0       0       0       0
  1295 ;;Total ram usage:       12 bytes
  1296 ;; Hardware stack levels used:    2
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		Interrupt level 1
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           
  1305                           ;psect for function _tmr1isr
  1306  0214                     _tmr1isr:	
  1307                           
  1308                           ;pwm_low.c: 32: if (CCP1IF == 1) {
  1309  0214  1D0C               	btfss	12,2	;volatile
  1310  0215  2ADC               	goto	i1l42
  1311                           
  1312                           ;pwm_low.c: 35: if ((current_period > 0) && (current_period < total_period)){
  1313  0216  0852               	movf	_current_period+3,w
  1314  0217  0451               	iorwf	_current_period+2,w
  1315  0218  0450               	iorwf	_current_period+1,w
  1316  0219  044F               	iorwf	_current_period,w
  1317  021A  1903               	skipnz
  1318  021B  2A96               	goto	i1l850
  1319  021C  3001               	movlw	low (_total_period-__stringbase)
  1320  021D  0084               	movwf	4
  1321  021E  120A  118A  2412  120A  118A  	fcall	stringdir
  1322  0223  00F0               	movwf	??_tmr1isr
  1323  0224  120A  118A  2412  120A  118A  	fcall	stringdir
  1324  0229  00F1               	movwf	??_tmr1isr+1
  1325  022A  120A  118A  2412  120A  118A  	fcall	stringdir
  1326  022F  00F2               	movwf	??_tmr1isr+2
  1327  0230  120A  118A  2412  120A  118A  	fcall	stringdir
  1328  0235  00F3               	movwf	??_tmr1isr+3
  1329  0236  0873               	movf	??_tmr1isr+3,w
  1330  0237  0252               	subwf	_current_period+3,w
  1331  0238  1D03               	skipz
  1332  0239  2A44               	goto	u87_25
  1333  023A  0872               	movf	??_tmr1isr+2,w
  1334  023B  0251               	subwf	_current_period+2,w
  1335  023C  1D03               	skipz
  1336  023D  2A44               	goto	u87_25
  1337  023E  0871               	movf	??_tmr1isr+1,w
  1338  023F  0250               	subwf	_current_period+1,w
  1339  0240  1D03               	skipz
  1340  0241  2A44               	goto	u87_25
  1341  0242  0870               	movf	??_tmr1isr,w
  1342  0243  024F               	subwf	_current_period,w
  1343  0244                     u87_25:	
  1344  0244  1803               	skipnc
  1345  0245  2A96               	goto	i1l850
  1346                           
  1347                           ;pwm_low.c: 37: if (RC2 == 1) {
  1348  0246  1D07               	btfss	7,2	;volatile
  1349  0247  2A8C               	goto	i1l37
  1350                           
  1351                           ;pwm_low.c: 38: RC2 = 0;
  1352  0248  1107               	bcf	7,2	;volatile
  1353                           
  1354                           ;pwm_low.c: 39: CCPR = total_period - current_period;
  1355  0249  3001               	movlw	low (_total_period-__stringbase)
  1356  024A  0084               	movwf	4
  1357  024B  120A  118A  2412  120A  118A  	fcall	stringdir
  1358  0250  00F0               	movwf	??_tmr1isr
  1359  0251  120A  118A  2412  120A  118A  	fcall	stringdir
  1360  0256  00F1               	movwf	??_tmr1isr+1
  1361  0257  120A  118A  2412  120A  118A  	fcall	stringdir
  1362  025C  00F2               	movwf	??_tmr1isr+2
  1363  025D  120A  118A  2412  120A  118A  	fcall	stringdir
  1364  0262  00F3               	movwf	??_tmr1isr+3
  1365  0263  094F               	comf	_current_period,w
  1366  0264  00F4               	movwf	??_tmr1isr+4
  1367  0265  0950               	comf	_current_period+1,w
  1368  0266  00F5               	movwf	??_tmr1isr+5
  1369  0267  0951               	comf	_current_period+2,w
  1370  0268  00F6               	movwf	??_tmr1isr+6
  1371  0269  0952               	comf	_current_period+3,w
  1372  026A  00F7               	movwf	??_tmr1isr+7
  1373  026B  0AF4               	incf	??_tmr1isr+4,f
  1374  026C  1903               	skipnz
  1375  026D  0AF5               	incf	??_tmr1isr+5,f
  1376  026E  1903               	skipnz
  1377  026F  0AF6               	incf	??_tmr1isr+6,f
  1378  0270  1903               	skipnz
  1379  0271  0AF7               	incf	??_tmr1isr+7,f
  1380  0272  0874               	movf	??_tmr1isr+4,w
  1381  0273  07F0               	addwf	??_tmr1isr,f
  1382  0274  0875               	movf	??_tmr1isr+5,w
  1383  0275  1803               	skipnc
  1384  0276  0F75               	incfsz	??_tmr1isr+5,w
  1385  0277  2A79               	goto	u89_20
  1386  0278  2A7A               	goto	u89_21
  1387  0279                     u89_20:	
  1388  0279  07F1               	addwf	??_tmr1isr+1,f
  1389  027A                     u89_21:	
  1390  027A  0876               	movf	??_tmr1isr+6,w
  1391  027B  1803               	skipnc
  1392  027C  0F76               	incfsz	??_tmr1isr+6,w
  1393  027D  2A7F               	goto	u89_22
  1394  027E  2A80               	goto	u89_23
  1395  027F                     u89_22:	
  1396  027F  07F2               	addwf	??_tmr1isr+2,f
  1397  0280                     u89_23:	
  1398  0280  0877               	movf	??_tmr1isr+7,w
  1399  0281  1803               	skipnc
  1400  0282  0A77               	incf	??_tmr1isr+7,w
  1401  0283  07F3               	addwf	??_tmr1isr+3,f
  1402  0284  0873               	movf	??_tmr1isr+3,w
  1403  0285  00D6               	movwf	_CCPR+3
  1404  0286  0872               	movf	??_tmr1isr+2,w
  1405  0287  00D5               	movwf	_CCPR+2
  1406  0288  0871               	movf	??_tmr1isr+1,w
  1407  0289  00D4               	movwf	_CCPR+1
  1408  028A  0870               	movf	??_tmr1isr,w
  1409  028B  2A94               	goto	L1
  1410  028C                     i1l37:	
  1411                           ;pwm_low.c: 40: }
  1412                           
  1413                           
  1414                           ;pwm_low.c: 42: else {
  1415                           ;pwm_low.c: 43: RC2 = 1;
  1416  028C  1507               	bsf	7,2	;volatile
  1417                           
  1418                           ;pwm_low.c: 44: CCPR = current_period;
  1419  028D  0852               	movf	_current_period+3,w
  1420  028E  00D6               	movwf	_CCPR+3
  1421  028F  0851               	movf	_current_period+2,w
  1422  0290  00D5               	movwf	_CCPR+2
  1423  0291  0850               	movf	_current_period+1,w
  1424  0292  00D4               	movwf	_CCPR+1
  1425  0293  084F               	movf	_current_period,w
  1426  0294                     L1:	
  1427  0294  00D3               	movwf	_CCPR
  1428                           
  1429                           ;pwm_low.c: 45: }
  1430                           ;pwm_low.c: 46: }
  1431  0295  2AC6               	goto	i1l858
  1432  0296                     i1l850:	
  1433                           
  1434                           ;pwm_low.c: 47: else {
  1435                           ;pwm_low.c: 48: if (current_period == total_period) { RC2 = 1;}
  1436  0296  3001               	movlw	low (_total_period-__stringbase)
  1437  0297  0084               	movwf	4
  1438  0298  120A  118A  2412  120A  118A  	fcall	stringdir
  1439  029D  00F0               	movwf	??_tmr1isr
  1440  029E  120A  118A  2412  120A  118A  	fcall	stringdir
  1441  02A3  00F1               	movwf	??_tmr1isr+1
  1442  02A4  120A  118A  2412  120A  118A  	fcall	stringdir
  1443  02A9  00F2               	movwf	??_tmr1isr+2
  1444  02AA  120A  118A  2412  120A  118A  	fcall	stringdir
  1445  02AF  00F3               	movwf	??_tmr1isr+3
  1446  02B0  0873               	movf	??_tmr1isr+3,w
  1447  02B1  0652               	xorwf	_current_period+3,w
  1448  02B2  1D03               	skipz
  1449  02B3  2ABE               	goto	u90_25
  1450  02B4  0872               	movf	??_tmr1isr+2,w
  1451  02B5  0651               	xorwf	_current_period+2,w
  1452  02B6  1D03               	skipz
  1453  02B7  2ABE               	goto	u90_25
  1454  02B8  0871               	movf	??_tmr1isr+1,w
  1455  02B9  0650               	xorwf	_current_period+1,w
  1456  02BA  1D03               	skipz
  1457  02BB  2ABE               	goto	u90_25
  1458  02BC  0870               	movf	??_tmr1isr,w
  1459  02BD  064F               	xorwf	_current_period,w
  1460  02BE                     u90_25:	
  1461  02BE  1903               	btfsc	3,2
  1462  02BF  1507               	bsf	7,2	;volatile
  1463                           
  1464                           ;pwm_low.c: 49: if (current_period == 0) {RC2 = 0;}
  1465  02C0  0852               	movf	_current_period+3,w
  1466  02C1  0451               	iorwf	_current_period+2,w
  1467  02C2  0450               	iorwf	_current_period+1,w
  1468  02C3  044F               	iorwf	_current_period,w
  1469  02C4  1903               	btfsc	3,2
  1470  02C5  1107               	bcf	7,2	;volatile
  1471  02C6                     i1l858:	
  1472                           
  1473                           ;pwm_low.c: 50: }
  1474                           ;pwm_low.c: 55: CCPR1H = CCPR >> 8;
  1475  02C6  0853               	movf	_CCPR,w
  1476  02C7  00F0               	movwf	??_tmr1isr
  1477  02C8  0854               	movf	_CCPR+1,w
  1478  02C9  00F1               	movwf	??_tmr1isr+1
  1479  02CA  0855               	movf	_CCPR+2,w
  1480  02CB  00F2               	movwf	??_tmr1isr+2
  1481  02CC  0856               	movf	_CCPR+3,w
  1482  02CD  00F3               	movwf	??_tmr1isr+3
  1483  02CE  3008               	movlw	8
  1484  02CF                     u92_25:	
  1485  02CF  1003               	clrc
  1486  02D0  0CF3               	rrf	??_tmr1isr+3,f
  1487  02D1  0CF2               	rrf	??_tmr1isr+2,f
  1488  02D2  0CF1               	rrf	??_tmr1isr+1,f
  1489  02D3  0CF0               	rrf	??_tmr1isr,f
  1490  02D4  3EFF               	addlw	-1
  1491  02D5  1D03               	skipz
  1492  02D6  2ACF               	goto	u92_25
  1493  02D7  0870               	movf	??_tmr1isr,w
  1494  02D8  0096               	movwf	22	;volatile
  1495                           
  1496                           ;pwm_low.c: 56: CCPR1L = CCPR;
  1497  02D9  0853               	movf	_CCPR,w
  1498  02DA  0095               	movwf	21	;volatile
  1499                           
  1500                           ;pwm_low.c: 57: CCP1IF = 0;
  1501  02DB  110C               	bcf	12,2	;volatile
  1502  02DC                     i1l42:	
  1503  02DC  087B               	movf	??_tmr1isr+11,w
  1504  02DD  00FF               	movwf	127
  1505  02DE  087A               	movf	??_tmr1isr+10,w
  1506  02DF  008A               	movwf	10
  1507  02E0  0879               	movf	??_tmr1isr+9,w
  1508  02E1  0084               	movwf	4
  1509  02E2  0E78               	swapf	(??_tmr1isr+8)^(0+-128),w
  1510  02E3  0083               	movwf	3
  1511  02E4  0EFE               	swapf	126,f
  1512  02E5  0E7E               	swapf	126,w
  1513  02E6  0009               	retfie
  1514  02E7                     __end_of_tmr1isr:	
  1515  007E                     btemp	set	126	;btemp
  1516  007E                     wtemp	set	126
  1517  007E                     wtemp0	set	126
  1518  0080                     wtemp1	set	128
  1519  0082                     wtemp2	set	130
  1520  0084                     wtemp3	set	132
  1521  0086                     wtemp4	set	134
  1522  0088                     wtemp5	set	136
  1523  007F                     wtemp6	set	127
  1524  007E                     ttemp	set	126
  1525  007E                     ttemp0	set	126
  1526  0081                     ttemp1	set	129
  1527  0084                     ttemp2	set	132
  1528  0087                     ttemp3	set	135
  1529  007F                     ttemp4	set	127
  1530  007E                     ltemp	set	126
  1531  007E                     ltemp0	set	126
  1532  0082                     ltemp1	set	130
  1533  0086                     ltemp2	set	134
  1534  0080                     ltemp3	set	128
  1535                           
  1536                           	psect	intentry
  1537  0004                     __pintentry:	
  1538                           ;incstack = 0
  1539                           ; Regs used in _tmr1isr: [wreg-fsr0h+status,2+status,0+pclath]
  1540                           
  1541  0004                     interrupt_function:	
  1542  007E                     saved_w	set	btemp
  1543  0004  00FE               	movwf	btemp
  1544  0005  0E03               	swapf	3,w
  1545  0006  00F8               	movwf	??_tmr1isr+8
  1546  0007  0804               	movf	4,w
  1547  0008  00F9               	movwf	??_tmr1isr+9
  1548  0009  080A               	movf	10,w
  1549  000A  00FA               	movwf	??_tmr1isr+10
  1550  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1551  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1552  000D  087F               	movf	btemp+1,w
  1553  000E  00FB               	movwf	??_tmr1isr+11
  1554  000F  120A  118A  2A14   	ljmp	_tmr1isr


Data Sizes:
    Strings     0
    Constant    4
    Data        0
    BSS         4
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     47      55
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _tmr1isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fttol
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lltoft

Critical Paths under _tmr1isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tmr1isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tmr1isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tmr1isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4541
                                             44 BANK0      3     3      0
                            ___ftmul
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (1) ___lltoft                                             6     2      4    1857
                                              8 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     411
                                             30 BANK0     14    10      4
                            ___ftmul (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2273
                                             14 BANK0     16    10      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1629
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tmr1isr                                             12    12      0       0
                                              0 COMMON    12    12      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___ftmul
     ___ftpack
     ___lltoft (ARG)
       ___ftpack
   ___fttol
     ___ftmul (ARG)
       ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___lltoft (ARG)
       ___ftpack
   ___lltoft
     ___ftpack

 _tmr1isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      43       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2F      37       5       68.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      43      12        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Dec 12 21:55:43 2016

                      pc 0002              __CFG_CP$OFF 0000                       fsr 0004  
                    l300 03C2                      l301 03CA                      l293 03AD  
                    l710 0386                      l720 03B2                      l712 0392  
                    l384 035B                      l722 03BC                      l714 0397  
                    l706 037F                      l810 0343                      l740 0159  
                    l822 036C                      l830 03E9                      l816 0350  
                    l808 0333                      l832 03FB                      l770 01D6  
                    l762 01BE                      l746 016F                      l818 035E  
                    l774 01E6                      l758 01AE                      l790 0301  
                    l884 003B                      _RC2 003A             __CFG_CPD$OFF 0000  
                    u515 03A6                      u535 03B5                      u615 017B  
                    u705 01E7                      u625 018D                      u715 01EF  
                    u805 0352                      u575 03D1                      u495 038B  
                    u655 01BF                      u665 01C7                      u745 0308  
                    u835 03EE                      u775 0334                      u937 008C  
                    u947 00E3                      u957 013A                      fsr0 0004  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     _CCPR 0053  
                   i1l42 02DC                     i1l37 028C             __CFG_WRT$OFF 0000  
                   _main 001D             ___ftpack@arg 0020             ___ftpack@exp 0023  
                   btemp 007E                     ltemp 007E                     start 0012  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000             ___ftmul@cntr 003C             ___ftmul@sign 003D  
           _total_period 0418             ___fttol@exp1 004B             ___fttol@lval 0047  
                  ?_main 0070            __CFG_WDTE$OFF 0000          __end_of___ftmul 0214  
                  _T1CON 0010          __end_of___fttol 0375                    i1l850 0296  
                  i1l858 02C6                    _TMR1H 000F                    _TMR1L 000E  
                  _PORTC 0007                    _TRISC 0087                    u90_25 02BE  
                  u92_25 02CF                    u87_25 0244                    u89_20 0279  
                  u89_21 027A                    u89_22 027F                    u89_23 0280  
           ___lltoft@exp 002D           __CFG_FCMEN$OFF 0000            ___ftpack@sign 0024  
        __end_of_tmr1isr 02E7           __CFG_BOREN$OFF 0000                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 0015  
           __end_of_main 0141                   ??_main 004C            ___fttol@sign1 0046  
                 _CCP1IE 0462                   _CCP1IF 0062                   _CCPR1H 0016  
                 _CCPR1L 0015         __end_of___ftpack 03E3         __end_of___lltoft 0412  
                 _INTCON 000B           __CFG_PWRTE$OFF 0000                ??___ftmul 0034  
              ??___fttol 0042    ___ftmul@f3_as_product 0039                   saved_w 007E  
              ??_tmr1isr 0070  __end_of__initialization 0019               ___ftmul@f1 002E  
             ___ftmul@f2 0031               ___fttol@f1 003E           __pcstackCOMMON 0070  
             ___lltoft@c 0028               __pbssBANK0 0053               __pmaintext 001D  
             __pintentry 0004                  _CCP1CON 0017                ?___ftpack 0020  
              ?___lltoft 0028               __stringtab 0412                  ___ftmul 0141  
                ___fttol 02E7               ??___ftpack 0025               ??___lltoft 002C  
                __ptext1 03E3                  __ptext2 02E7                  __ptext3 0141  
                __ptext4 0375                  __ptext5 0214                  _tmr1isr 0214  
   end_of_initialization 0019              ___ftmul@exp 0038      start_initialization 0015  
      __size_of___ftpack 006E        __size_of___lltoft 002F           _current_period 004F  
              ___latbits 0002            __pcstackBANK0 0020                __pnvBANK0 004F  
               ?___ftmul 002E                 ?___fttol 003E                __pstrings 0412  
               ?_tmr1isr 0070        interrupt_function 0004              __stringbase 0417  
       __size_of___ftmul 00D3         __size_of___fttol 008E                 ___ftpack 0375  
     __end_of__stringtab 0418                 ___lltoft 03E3         __size_of_tmr1isr 00D3  
      __CFG_BOR4V$BOR40V 0000     __end_of_total_period 041C            __size_of_main 0124  
               intlevel1 0000                stringcode 0412                 stringdir 0412  
               stringtab 0412  
