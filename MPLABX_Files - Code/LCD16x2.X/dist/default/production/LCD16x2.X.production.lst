

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Dec 01 14:22:56 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0007                     	;# 
    27  0008                     	;# 
    28  0009                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000D                     	;# 
    33  000E                     	;# 
    34  000E                     	;# 
    35  000F                     	;# 
    36  0010                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0013                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0015                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001B                     	;# 
    50  001C                     	;# 
    51  001D                     	;# 
    52  001E                     	;# 
    53  001F                     	;# 
    54  0081                     	;# 
    55  0085                     	;# 
    56  0086                     	;# 
    57  0087                     	;# 
    58  0088                     	;# 
    59  0089                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0094                     	;# 
    67  0098                     	;# 
    68  0099                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  009F                     	;# 
    73  010C                     	;# 
    74  010D                     	;# 
    75  010E                     	;# 
    76  010F                     	;# 
    77  018C                     	;# 
    78  018D                     	;# 
    79  0042                     _RD2	set	66
    80  0043                     _RD3	set	67
    81  0044                     _RD4	set	68
    82  0045                     _RD5	set	69
    83  0046                     _RD6	set	70
    84  0047                     _RD7	set	71
    85  0088                     _TRISD	set	136
    86                           
    87                           	psect	strings
    88  0003                     __pstrings:	
    89  0003                     stringtab:	
    90  0003                     __stringtab:	
    91  0003                     stringcode:	
    92                           ;	String table - string pointers are 1 byte each
    93                           
    94  0003                     stringdir:	
    95  0003  3000               	movlw	high stringdir
    96  0004  008A               	movwf	10
    97  0005  0804               	movf	4,w
    98  0006  0A84               	incf	4,f
    99  0007  0782               	addwf	2,f
   100  0008                     __stringbase:	
   101  0008  3400               	retlw	0
   102  0009                     __end_of__stringtab:	
   103  0009                     STR_1:	
   104  0009  3441               	retlw	65	;'A'
   105  000A  3442               	retlw	66	;'B'
   106  000B  3443               	retlw	67	;'C'
   107  000C  3444               	retlw	68	;'D'
   108  000D  3445               	retlw	69	;'E'
   109  000E  3446               	retlw	70	;'F'
   110  000F  3447               	retlw	71	;'G'
   111  0010  3448               	retlw	72	;'H'
   112  0011  3449               	retlw	73	;'I'
   113  0012  344A               	retlw	74	;'J'
   114  0013  344B               	retlw	75	;'K'
   115  0014  344C               	retlw	76	;'L'
   116  0015  344D               	retlw	77	;'M'
   117  0016  344E               	retlw	78	;'N'
   118  0017  344F               	retlw	79	;'O'
   119  0018  3450               	retlw	80	;'P'
   120  0019  3400               	retlw	0
   121  001A                     STR_2:	
   122  001A  3461               	retlw	97	;'a'
   123  001B  3462               	retlw	98	;'b'
   124  001C  3463               	retlw	99	;'c'
   125  001D  3464               	retlw	100	;'d'
   126  001E  3465               	retlw	101	;'e'
   127  001F  3466               	retlw	102	;'f'
   128  0020  3467               	retlw	103	;'g'
   129  0021  3468               	retlw	104	;'h'
   130  0022  3469               	retlw	105	;'i'
   131  0023  346A               	retlw	106	;'j'
   132  0024  346B               	retlw	107	;'k'
   133  0025  346C               	retlw	108	;'l'
   134  0026  346D               	retlw	109	;'m'
   135  0027  346E               	retlw	110	;'n'
   136  0028  346F               	retlw	111	;'o'
   137  0029  3470               	retlw	112	;'p'
   138  002A  3400               	retlw	0
   139  002B                     STR_4:	
   140  002B  3421               	retlw	33	;'!'
   141  002C  3440               	retlw	64	;'@'
   142  002D  3423               	retlw	35	;'#'
   143  002E  3424               	retlw	36	;'$'
   144  002F  3425               	retlw	37	;'%'
   145  0030  345E               	retlw	94	;'^'
   146  0031  3426               	retlw	38	;'&'
   147  0032  342A               	retlw	42	;'*'
   148  0033  3428               	retlw	40	;'('
   149  0034  3429               	retlw	41	;')'
   150  0035  345F               	retlw	95	;'_'
   151  0036  342B               	retlw	43	;'+'
   152  0037  3400               	retlw	0
   153  0038                     STR_5:	
   154  0038  3448               	retlw	72	;'H'
   155  0039  3469               	retlw	105	;'i'
   156  003A  3472               	retlw	114	;'r'
   157  003B  3461               	retlw	97	;'a'
   158  003C  346E               	retlw	110	;'n'
   159  003D  3420               	retlw	32	;' '
   160  003E  3450               	retlw	80	;'P'
   161  003F  3465               	retlw	101	;'e'
   162  0040  3472               	retlw	114	;'r'
   163  0041  3465               	retlw	101	;'e'
   164  0042  3472               	retlw	114	;'r'
   165  0043  3461               	retlw	97	;'a'
   166  0044  3400               	retlw	0
   167  0045                     STR_3:	
   168  0045  3431               	retlw	49	;'1'
   169  0046  3432               	retlw	50	;'2'
   170  0047  3433               	retlw	51	;'3'
   171  0048  3434               	retlw	52	;'4'
   172  0049  3435               	retlw	53	;'5'
   173  004A  3436               	retlw	54	;'6'
   174  004B  3437               	retlw	55	;'7'
   175  004C  3438               	retlw	56	;'8'
   176  004D  3439               	retlw	57	;'9'
   177  004E  3400               	retlw	0
   178                           
   179                           ; #config settings
   180  0000                     
   181                           	psect	cinit
   182  07FC                     start_initialization:	
   183  07FC                     __initialization:	
   184  07FC                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187  07FC                     __end_of__initialization:	
   188  07FC  0183               	clrf	3
   189  07FD  120A  118A  2F0B   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	cstackCOMMON
   192  0070                     __pcstackCOMMON:	
   193  0070                     ?_Lcd_Port:	
   194  0070                     ??_Lcd_Port:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ?_Lcd_Cmd:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ?_Lcd_Init:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     ?_Lcd_Write_Char:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     ?_Lcd_Write_String:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0070                     ?_Lcd_Shift_Right:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0070                     ?_Lcd_Shift_Left:	
   213                           ; 1 bytes @ 0x0
   214                           
   215  0070                     ?_Lcd_Clear:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0070                     ?_main:	
   219                           ; 2 bytes @ 0x0
   220                           
   221  0070                     Lcd_Port@a:	
   222                           ; 2 bytes @ 0x0
   223                           
   224                           
   225                           ; 1 bytes @ 0x0
   226  0070                     	ds	1
   227  0071                     ??_Lcd_Cmd:	
   228  0071                     ??_Lcd_Write_Char:	
   229                           ; 1 bytes @ 0x1
   230                           
   231                           
   232                           ; 1 bytes @ 0x1
   233  0071                     	ds	1
   234  0072                     Lcd_Write_Char@temp:	
   235                           
   236                           ; 1 bytes @ 0x2
   237  0072                     	ds	1
   238  0073                     Lcd_Cmd@a:	
   239  0073                     Lcd_Write_Char@y:	
   240                           ; 1 bytes @ 0x3
   241                           
   242                           
   243                           ; 1 bytes @ 0x3
   244  0073                     	ds	1
   245  0074                     ??_Lcd_Clear:	
   246  0074                     ?_Lcd_Set_Cursor:	
   247                           ; 1 bytes @ 0x4
   248                           
   249  0074                     ??_Lcd_Init:	
   250                           ; 1 bytes @ 0x4
   251                           
   252  0074                     ??_Lcd_Shift_Right:	
   253                           ; 1 bytes @ 0x4
   254                           
   255  0074                     ??_Lcd_Shift_Left:	
   256                           ; 1 bytes @ 0x4
   257                           
   258  0074                     Lcd_Set_Cursor@b:	
   259                           ; 1 bytes @ 0x4
   260                           
   261  0074                     Lcd_Write_Char@a:	
   262                           ; 1 bytes @ 0x4
   263                           
   264                           
   265                           ; 1 bytes @ 0x4
   266  0074                     	ds	1
   267  0075                     ??_Lcd_Set_Cursor:	
   268  0075                     ??_Lcd_Write_String:	
   269                           ; 1 bytes @ 0x5
   270                           
   271  0075                     Lcd_Write_String@i:	
   272                           ; 1 bytes @ 0x5
   273                           
   274                           
   275                           ; 2 bytes @ 0x5
   276  0075                     	ds	2
   277  0077                     Lcd_Set_Cursor@a:	
   278  0077                     Lcd_Write_String@a:	
   279                           ; 1 bytes @ 0x7
   280                           
   281                           
   282                           ; 1 bytes @ 0x7
   283  0077                     	ds	1
   284  0078                     Lcd_Set_Cursor@z:	
   285                           
   286                           ; 1 bytes @ 0x8
   287  0078                     	ds	1
   288  0079                     Lcd_Set_Cursor@y:	
   289                           
   290                           ; 1 bytes @ 0x9
   291  0079                     	ds	1
   292  007A                     Lcd_Set_Cursor@temp:	
   293                           
   294                           ; 1 bytes @ 0xA
   295  007A                     	ds	1
   296  007B                     ??_main:	
   297                           
   298                           ; 1 bytes @ 0xB
   299  007B                     	ds	3
   300                           
   301                           	psect	cstackBANK0
   302  0020                     __pcstackBANK0:	
   303  0020                     main@a:	
   304                           
   305                           ; 2 bytes @ 0x0
   306  0020                     	ds	2
   307                           
   308                           	psect	maintext
   309  070B                     __pmaintext:	
   310 ;;
   311 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   312 ;;
   313 ;; *************** function _main *****************
   314 ;; Defined at:
   315 ;;		line 28 in file "main.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;  a               2    0[BANK0 ] unsigned int 
   320 ;; Return value:  Size  Location     Type
   321 ;;                  2   59[None  ] int 
   322 ;; Registers used:
   323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   324 ;; Tracked objects:
   325 ;;		On entry : B00/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   329 ;;      Params:         0       0       0       0       0
   330 ;;      Locals:         0       2       0       0       0
   331 ;;      Temps:          3       0       0       0       0
   332 ;;      Totals:         3       2       0       0       0
   333 ;;Total ram usage:        5 bytes
   334 ;; Hardware stack levels required when called:    3
   335 ;; This function calls:
   336 ;;		_Lcd_Clear
   337 ;;		_Lcd_Init
   338 ;;		_Lcd_Set_Cursor
   339 ;;		_Lcd_Shift_Left
   340 ;;		_Lcd_Shift_Right
   341 ;;		_Lcd_Write_Char
   342 ;;		_Lcd_Write_String
   343 ;; This function is called by:
   344 ;;		Startup code after reset
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           
   349                           ;psect for function _main
   350  070B                     _main:	
   351                           
   352                           ;main.c: 30: unsigned int a;
   353                           ;main.c: 31: TRISD = 0x00;
   354                           
   355                           ;incstack = 0
   356                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   357  070B  1683               	bsf	3,5	;RP0=1, select bank1
   358  070C  1303               	bcf	3,6	;RP1=0, select bank1
   359  070D  0188               	clrf	8	;volatile
   360                           
   361                           ;main.c: 32: Lcd_Init();
   362  070E  120A  118A  26AF  120A  118A  	fcall	_Lcd_Init
   363  0713                     l765:	
   364                           ;main.c: 33: while(1)
   365                           
   366                           
   367                           ;main.c: 34: {
   368                           ;main.c: 35: Lcd_Clear();
   369  0713  120A  118A  25B5  120A  118A  	fcall	_Lcd_Clear
   370                           
   371                           ;main.c: 36: Lcd_Set_Cursor(1,1);
   372  0718  01F4               	clrf	Lcd_Set_Cursor@b
   373  0719  0AF4               	incf	Lcd_Set_Cursor@b,f
   374  071A  3001               	movlw	1
   375  071B  120A  118A  2665  120A  118A  	fcall	_Lcd_Set_Cursor
   376                           
   377                           ;main.c: 37: Lcd_Write_String("ABCDEFGHIJKLMNOP");
   378  0720  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   379  0721  120A  118A  260A  120A  118A  	fcall	_Lcd_Write_String
   380                           
   381                           ;main.c: 38: Lcd_Set_Cursor(2,1);
   382  0726  01F4               	clrf	Lcd_Set_Cursor@b
   383  0727  0AF4               	incf	Lcd_Set_Cursor@b,f
   384  0728  3002               	movlw	2
   385  0729  120A  118A  2665  120A  118A  	fcall	_Lcd_Set_Cursor
   386                           
   387                           ;main.c: 39: Lcd_Write_String("abcdefghijklmnop");
   388  072E  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   389  072F  120A  118A  260A  120A  118A  	fcall	_Lcd_Write_String
   390                           
   391                           ;main.c: 40: _delay((unsigned long)((2000)*(20000000/4000.0)));
   392  0734  3033               	movlw	51
   393  0735  00FD               	movwf	??_main+2
   394  0736  30BC               	movlw	188
   395  0737  00FC               	movwf	??_main+1
   396  0738  3010               	movlw	16
   397  0739  00FB               	movwf	??_main
   398  073A                     u297:	
   399  073A  0BFB               	decfsz	??_main,f
   400  073B  2F3A               	goto	u297
   401  073C  0BFC               	decfsz	??_main+1,f
   402  073D  2F3A               	goto	u297
   403  073E  0BFD               	decfsz	??_main+2,f
   404  073F  2F3A               	goto	u297
   405                           
   406                           ;main.c: 41: Lcd_Clear();
   407  0740  120A  118A  25B5  120A  118A  	fcall	_Lcd_Clear
   408                           
   409                           ;main.c: 42: Lcd_Set_Cursor(1,1);
   410  0745  01F4               	clrf	Lcd_Set_Cursor@b
   411  0746  0AF4               	incf	Lcd_Set_Cursor@b,f
   412  0747  3001               	movlw	1
   413  0748  120A  118A  2665  120A  118A  	fcall	_Lcd_Set_Cursor
   414                           
   415                           ;main.c: 43: Lcd_Write_String("123456789");
   416  074D  303D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   417  074E  120A  118A  260A  120A  118A  	fcall	_Lcd_Write_String
   418                           
   419                           ;main.c: 44: Lcd_Set_Cursor(2,1);
   420  0753  01F4               	clrf	Lcd_Set_Cursor@b
   421  0754  0AF4               	incf	Lcd_Set_Cursor@b,f
   422  0755  3002               	movlw	2
   423  0756  120A  118A  2665  120A  118A  	fcall	_Lcd_Set_Cursor
   424                           
   425                           ;main.c: 45: Lcd_Write_String("!@#$%^&*()_+");
   426  075B  3023               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   427  075C  120A  118A  260A  120A  118A  	fcall	_Lcd_Write_String
   428                           
   429                           ;main.c: 46: _delay((unsigned long)((2000)*(20000000/4000.0)));
   430  0761  3033               	movlw	51
   431  0762  00FD               	movwf	??_main+2
   432  0763  30BC               	movlw	188
   433  0764  00FC               	movwf	??_main+1
   434  0765  3010               	movlw	16
   435  0766  00FB               	movwf	??_main
   436  0767                     u307:	
   437  0767  0BFB               	decfsz	??_main,f
   438  0768  2F67               	goto	u307
   439  0769  0BFC               	decfsz	??_main+1,f
   440  076A  2F67               	goto	u307
   441  076B  0BFD               	decfsz	??_main+2,f
   442  076C  2F67               	goto	u307
   443                           
   444                           ;main.c: 47: Lcd_Clear();
   445  076D  120A  118A  25B5  120A  118A  	fcall	_Lcd_Clear
   446                           
   447                           ;main.c: 48: Lcd_Set_Cursor(1,1);
   448  0772  01F4               	clrf	Lcd_Set_Cursor@b
   449  0773  0AF4               	incf	Lcd_Set_Cursor@b,f
   450  0774  3001               	movlw	1
   451  0775  120A  118A  2665  120A  118A  	fcall	_Lcd_Set_Cursor
   452                           
   453                           ;main.c: 49: Lcd_Write_String("Hiran Perera");
   454  077A  3030               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   455  077B  120A  118A  260A  120A  118A  	fcall	_Lcd_Write_String
   456                           
   457                           ;main.c: 51: for(a=0;a<15;a++)
   458  0780  1283               	bcf	3,5	;RP0=0, select bank0
   459  0781  1303               	bcf	3,6	;RP1=0, select bank0
   460  0782  01A0               	clrf	main@a
   461  0783  01A1               	clrf	main@a+1
   462  0784  3000               	movlw	0
   463  0785  0221               	subwf	main@a+1,w
   464  0786  300F               	movlw	15
   465  0787  1903               	skipnz
   466  0788  0220               	subwf	main@a,w
   467  0789  1803               	btfsc	3,0
   468  078A  2FAC               	goto	l809
   469  078B                     l801:	
   470                           
   471                           ;main.c: 52: {
   472                           ;main.c: 53: _delay((unsigned long)((300)*(20000000/4000.0)));
   473  078B  3008               	movlw	8
   474  078C  00FD               	movwf	??_main+2
   475  078D  309D               	movlw	157
   476  078E  00FC               	movwf	??_main+1
   477  078F  300B               	movlw	11
   478  0790  00FB               	movwf	??_main
   479  0791                     u317:	
   480  0791  0BFB               	decfsz	??_main,f
   481  0792  2F91               	goto	u317
   482  0793  0BFC               	decfsz	??_main+1,f
   483  0794  2F91               	goto	u317
   484  0795  0BFD               	decfsz	??_main+2,f
   485  0796  2F91               	goto	u317
   486  0797  2F98               	nop2
   487                           
   488                           ;main.c: 54: Lcd_Shift_Right();
   489  0798  120A  118A  25CB  120A  118A  	fcall	_Lcd_Shift_Right
   490  079D  3001               	movlw	1
   491  079E  1283               	bcf	3,5	;RP0=0, select bank0
   492  079F  1303               	bcf	3,6	;RP1=0, select bank0
   493  07A0  07A0               	addwf	main@a,f
   494  07A1  1803               	skipnc
   495  07A2  0AA1               	incf	main@a+1,f
   496  07A3  3000               	movlw	0
   497  07A4  07A1               	addwf	main@a+1,f
   498  07A5  3000               	movlw	0
   499  07A6  0221               	subwf	main@a+1,w
   500  07A7  300F               	movlw	15
   501  07A8  1903               	skipnz
   502  07A9  0220               	subwf	main@a,w
   503  07AA  1C03               	skipc
   504  07AB  2F8B               	goto	l801
   505  07AC                     l809:	
   506                           
   507                           ;main.c: 55: }
   508                           ;main.c: 57: for(a=0;a<15;a++)
   509  07AC  01A0               	clrf	main@a
   510  07AD  01A1               	clrf	main@a+1
   511  07AE  3000               	movlw	0
   512  07AF  0221               	subwf	main@a+1,w
   513  07B0  300F               	movlw	15
   514  07B1  1903               	skipnz
   515  07B2  0220               	subwf	main@a,w
   516  07B3  1803               	btfsc	3,0
   517  07B4  2FD6               	goto	l823
   518  07B5                     l815:	
   519                           
   520                           ;main.c: 58: {
   521                           ;main.c: 59: _delay((unsigned long)((300)*(20000000/4000.0)));
   522  07B5  3008               	movlw	8
   523  07B6  00FD               	movwf	??_main+2
   524  07B7  309D               	movlw	157
   525  07B8  00FC               	movwf	??_main+1
   526  07B9  300B               	movlw	11
   527  07BA  00FB               	movwf	??_main
   528  07BB                     u327:	
   529  07BB  0BFB               	decfsz	??_main,f
   530  07BC  2FBB               	goto	u327
   531  07BD  0BFC               	decfsz	??_main+1,f
   532  07BE  2FBB               	goto	u327
   533  07BF  0BFD               	decfsz	??_main+2,f
   534  07C0  2FBB               	goto	u327
   535  07C1  2FC2               	nop2
   536                           
   537                           ;main.c: 60: Lcd_Shift_Left();
   538  07C2  120A  118A  25C0  120A  118A  	fcall	_Lcd_Shift_Left
   539  07C7  3001               	movlw	1
   540  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   541  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   542  07CA  07A0               	addwf	main@a,f
   543  07CB  1803               	skipnc
   544  07CC  0AA1               	incf	main@a+1,f
   545  07CD  3000               	movlw	0
   546  07CE  07A1               	addwf	main@a+1,f
   547  07CF  3000               	movlw	0
   548  07D0  0221               	subwf	main@a+1,w
   549  07D1  300F               	movlw	15
   550  07D2  1903               	skipnz
   551  07D3  0220               	subwf	main@a,w
   552  07D4  1C03               	skipc
   553  07D5  2FB5               	goto	l815
   554  07D6                     l823:	
   555                           
   556                           ;main.c: 61: }
   557                           ;main.c: 63: Lcd_Clear();
   558  07D6  120A  118A  25B5  120A  118A  	fcall	_Lcd_Clear
   559                           
   560                           ;main.c: 64: Lcd_Set_Cursor(2,1);
   561  07DB  01F4               	clrf	Lcd_Set_Cursor@b
   562  07DC  0AF4               	incf	Lcd_Set_Cursor@b,f
   563  07DD  3002               	movlw	2
   564  07DE  120A  118A  2665  120A  118A  	fcall	_Lcd_Set_Cursor
   565                           
   566                           ;main.c: 65: Lcd_Write_Char('H');
   567  07E3  3048               	movlw	72
   568  07E4  120A  118A  262C  120A  118A  	fcall	_Lcd_Write_Char
   569                           
   570                           ;main.c: 66: Lcd_Write_Char('P');
   571  07E9  3050               	movlw	80
   572  07EA  120A  118A  262C  120A  118A  	fcall	_Lcd_Write_Char
   573                           
   574                           ;main.c: 67: _delay((unsigned long)((2000)*(20000000/4000.0)));
   575  07EF  3033               	movlw	51
   576  07F0  00FD               	movwf	??_main+2
   577  07F1  30BC               	movlw	188
   578  07F2  00FC               	movwf	??_main+1
   579  07F3  3010               	movlw	16
   580  07F4  00FB               	movwf	??_main
   581  07F5                     u337:	
   582  07F5  0BFB               	decfsz	??_main,f
   583  07F6  2FF5               	goto	u337
   584  07F7  0BFC               	decfsz	??_main+1,f
   585  07F8  2FF5               	goto	u337
   586  07F9  0BFD               	decfsz	??_main+2,f
   587  07FA  2FF5               	goto	u337
   588  07FB  2F13               	goto	l765
   589  07FC                     __end_of_main:	
   590                           ;main.c: 68: }
   591                           ;main.c: 69: return 0;
   592                           ;	Return value of _main is never used
   593                           
   594                           
   595                           	psect	text1
   596  060A                     __ptext1:	
   597 ;; *************** function _Lcd_Write_String *****************
   598 ;; Defined at:
   599 ;;		line 97 in file "lcd.h"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  a               1    wreg     PTR unsigned char 
   602 ;;		 -> STR_5(13), STR_4(13), STR_3(10), STR_2(17), 
   603 ;;		 -> STR_1(17), 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  a               1    7[COMMON] PTR unsigned char 
   606 ;;		 -> STR_5(13), STR_4(13), STR_3(10), STR_2(17), 
   607 ;;		 -> STR_1(17), 
   608 ;;  i               2    5[COMMON] int 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         0       0       0       0       0
   619 ;;      Locals:         3       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0
   621 ;;      Totals:         3       0       0       0       0
   622 ;;Total ram usage:        3 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    2
   625 ;; This function calls:
   626 ;;		_Lcd_Write_Char
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _Lcd_Write_String
   634  060A                     _Lcd_Write_String:	
   635                           
   636                           ;incstack = 0
   637                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   638                           ;Lcd_Write_String@a stored from wreg
   639  060A  00F7               	movwf	Lcd_Write_String@a
   640                           
   641                           ;lcd.h: 99: int i;
   642                           ;lcd.h: 100: for(i=0;a[i]!='\0';i++)
   643  060B  01F5               	clrf	Lcd_Write_String@i
   644  060C  01F6               	clrf	Lcd_Write_String@i+1
   645  060D                     l755:	
   646  060D  0875               	movf	Lcd_Write_String@i,w
   647  060E  0777               	addwf	Lcd_Write_String@a,w
   648  060F  0084               	movwf	4
   649  0610  120A  118A  2003  120A  118A  	fcall	stringdir
   650  0615  3A00               	xorlw	0
   651  0616  1903               	btfsc	3,2
   652  0617  0008               	return
   653                           
   654                           ;lcd.h: 101: Lcd_Write_Char(a[i]);
   655  0618  0875               	movf	Lcd_Write_String@i,w
   656  0619  0777               	addwf	Lcd_Write_String@a,w
   657  061A  0084               	movwf	4
   658  061B  120A  118A  2003  120A  118A  	fcall	stringdir
   659  0620  120A  118A  262C  120A  118A  	fcall	_Lcd_Write_Char
   660  0625  3001               	movlw	1
   661  0626  07F5               	addwf	Lcd_Write_String@i,f
   662  0627  1803               	skipnc
   663  0628  0AF6               	incf	Lcd_Write_String@i+1,f
   664  0629  3000               	movlw	0
   665  062A  07F6               	addwf	Lcd_Write_String@i+1,f
   666  062B  2E0D               	goto	l755
   667  062C                     __end_of_Lcd_Write_String:	
   668                           
   669                           	psect	text2
   670  062C                     __ptext2:	
   671 ;; *************** function _Lcd_Write_Char *****************
   672 ;; Defined at:
   673 ;;		line 81 in file "lcd.h"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  a               1    wreg     unsigned char 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  a               1    4[COMMON] unsigned char 
   678 ;;  y               1    3[COMMON] unsigned char 
   679 ;;  temp            1    2[COMMON] unsigned char 
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2, status,0, pclath, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   689 ;;      Params:         0       0       0       0       0
   690 ;;      Locals:         3       0       0       0       0
   691 ;;      Temps:          1       0       0       0       0
   692 ;;      Totals:         4       0       0       0       0
   693 ;;Total ram usage:        4 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; Hardware stack levels required when called:    1
   696 ;; This function calls:
   697 ;;		_Lcd_Port
   698 ;; This function is called by:
   699 ;;		_Lcd_Write_String
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           
   705                           ;psect for function _Lcd_Write_Char
   706  062C                     _Lcd_Write_Char:	
   707                           
   708                           ;incstack = 0
   709                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   710                           ;Lcd_Write_Char@a stored from wreg
   711  062C  00F4               	movwf	Lcd_Write_Char@a
   712                           
   713                           ;lcd.h: 83: char temp,y;
   714                           ;lcd.h: 84: temp = a&0x0F;
   715  062D  0874               	movf	Lcd_Write_Char@a,w
   716  062E  390F               	andlw	15
   717  062F  00F1               	movwf	??_Lcd_Write_Char
   718  0630  0871               	movf	??_Lcd_Write_Char,w
   719  0631  00F2               	movwf	Lcd_Write_Char@temp
   720                           
   721                           ;lcd.h: 85: y = a&0xF0;
   722  0632  0874               	movf	Lcd_Write_Char@a,w
   723  0633  39F0               	andlw	240
   724  0634  00F1               	movwf	??_Lcd_Write_Char
   725  0635  0871               	movf	??_Lcd_Write_Char,w
   726  0636  00F3               	movwf	Lcd_Write_Char@y
   727                           
   728                           ;lcd.h: 86: RD2 = 1;
   729  0637  1283               	bcf	3,5	;RP0=0, select bank0
   730  0638  1303               	bcf	3,6	;RP1=0, select bank0
   731  0639  1508               	bsf	8,2	;volatile
   732                           
   733                           ;lcd.h: 87: Lcd_Port(y>>4);
   734  063A  0873               	movf	Lcd_Write_Char@y,w
   735  063B  00F1               	movwf	??_Lcd_Write_Char
   736  063C  3004               	movlw	4
   737  063D                     u195:	
   738  063D  1003               	clrc
   739  063E  0CF1               	rrf	??_Lcd_Write_Char,f
   740  063F  3EFF               	addlw	-1
   741  0640  1D03               	skipz
   742  0641  2E3D               	goto	u195
   743  0642  0871               	movf	??_Lcd_Write_Char,w
   744  0643  120A  118A  25D6  120A  118A  	fcall	_Lcd_Port
   745                           
   746                           ;lcd.h: 88: RD3 = 1;
   747  0648  1283               	bcf	3,5	;RP0=0, select bank0
   748  0649  1303               	bcf	3,6	;RP1=0, select bank0
   749  064A  1588               	bsf	8,3	;volatile
   750                           
   751                           ;lcd.h: 89: _delay((unsigned long)((40)*(20000000/4000000.0)));
   752  064B  3042               	movlw	66
   753  064C  00F1               	movwf	??_Lcd_Write_Char
   754  064D                     u347:	
   755  064D  0BF1               	decfsz	??_Lcd_Write_Char,f
   756  064E  2E4D               	goto	u347
   757  064F  0000               	nop
   758                           
   759                           ;lcd.h: 90: RD3 = 0;
   760  0650  1283               	bcf	3,5	;RP0=0, select bank0
   761  0651  1303               	bcf	3,6	;RP1=0, select bank0
   762  0652  1188               	bcf	8,3	;volatile
   763                           
   764                           ;lcd.h: 91: Lcd_Port(temp);
   765  0653  0872               	movf	Lcd_Write_Char@temp,w
   766  0654  120A  118A  25D6  120A  118A  	fcall	_Lcd_Port
   767                           
   768                           ;lcd.h: 92: RD3 = 1;
   769  0659  1283               	bcf	3,5	;RP0=0, select bank0
   770  065A  1303               	bcf	3,6	;RP1=0, select bank0
   771  065B  1588               	bsf	8,3	;volatile
   772                           
   773                           ;lcd.h: 93: _delay((unsigned long)((40)*(20000000/4000000.0)));
   774  065C  3042               	movlw	66
   775  065D  00F1               	movwf	??_Lcd_Write_Char
   776  065E                     u357:	
   777  065E  0BF1               	decfsz	??_Lcd_Write_Char,f
   778  065F  2E5E               	goto	u357
   779  0660  0000               	nop
   780                           
   781                           ;lcd.h: 94: RD3 = 0;
   782  0661  1283               	bcf	3,5	;RP0=0, select bank0
   783  0662  1303               	bcf	3,6	;RP1=0, select bank0
   784  0663  1188               	bcf	8,3	;volatile
   785  0664  0008               	return
   786  0665                     __end_of_Lcd_Write_Char:	
   787                           
   788                           	psect	text3
   789  05CB                     __ptext3:	
   790 ;; *************** function _Lcd_Shift_Right *****************
   791 ;; Defined at:
   792 ;;		line 104 in file "lcd.h"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0, pclath, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   806 ;;      Params:         0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    2
   813 ;; This function calls:
   814 ;;		_Lcd_Cmd
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           
   821                           ;psect for function _Lcd_Shift_Right
   822  05CB                     _Lcd_Shift_Right:	
   823                           
   824                           ;lcd.h: 106: Lcd_Cmd(0x01);
   825                           
   826                           ;incstack = 0
   827                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
   828  05CB  3001               	movlw	1
   829  05CC  120A  118A  25F0  120A  118A  	fcall	_Lcd_Cmd
   830                           
   831                           ;lcd.h: 107: Lcd_Cmd(0x0C);
   832  05D1  300C               	movlw	12
   833  05D2  120A  118A  25F0   	fcall	_Lcd_Cmd
   834  05D5  0008               	return
   835  05D6                     __end_of_Lcd_Shift_Right:	
   836                           
   837                           	psect	text4
   838  05C0                     __ptext4:	
   839 ;; *************** function _Lcd_Shift_Left *****************
   840 ;; Defined at:
   841 ;;		line 110 in file "lcd.h"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0, pclath, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0
   858 ;;      Totals:         0       0       0       0       0
   859 ;;Total ram usage:        0 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    2
   862 ;; This function calls:
   863 ;;		_Lcd_Cmd
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           
   870                           ;psect for function _Lcd_Shift_Left
   871  05C0                     _Lcd_Shift_Left:	
   872                           
   873                           ;lcd.h: 112: Lcd_Cmd(0x01);
   874                           
   875                           ;incstack = 0
   876                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
   877  05C0  3001               	movlw	1
   878  05C1  120A  118A  25F0  120A  118A  	fcall	_Lcd_Cmd
   879                           
   880                           ;lcd.h: 113: Lcd_Cmd(0x08);
   881  05C6  3008               	movlw	8
   882  05C7  120A  118A  25F0   	fcall	_Lcd_Cmd
   883  05CA  0008               	return
   884  05CB                     __end_of_Lcd_Shift_Left:	
   885                           
   886                           	psect	text5
   887  0665                     __ptext5:	
   888 ;; *************** function _Lcd_Set_Cursor *****************
   889 ;; Defined at:
   890 ;;		line 41 in file "lcd.h"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  a               1    wreg     unsigned char 
   893 ;;  b               1    4[COMMON] unsigned char 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  a               1    7[COMMON] unsigned char 
   896 ;;  temp            1   10[COMMON] unsigned char 
   897 ;;  y               1    9[COMMON] unsigned char 
   898 ;;  z               1    8[COMMON] unsigned char 
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, status,2, status,0, pclath, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   908 ;;      Params:         1       0       0       0       0
   909 ;;      Locals:         4       0       0       0       0
   910 ;;      Temps:          2       0       0       0       0
   911 ;;      Totals:         7       0       0       0       0
   912 ;;Total ram usage:        7 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    2
   915 ;; This function calls:
   916 ;;		_Lcd_Cmd
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _Lcd_Set_Cursor
   924  0665                     _Lcd_Set_Cursor:	
   925                           
   926                           ;incstack = 0
   927                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   928                           ;Lcd_Set_Cursor@a stored from wreg
   929  0665  00F7               	movwf	Lcd_Set_Cursor@a
   930                           
   931                           ;lcd.h: 43: char temp,z,y;
   932                           ;lcd.h: 44: if(a == 1)
   933  0666  0377               	decf	Lcd_Set_Cursor@a,w
   934  0667  1D03               	btfss	3,2
   935  0668  2E8A               	goto	l729
   936                           
   937                           ;lcd.h: 45: {
   938                           ;lcd.h: 46: temp = 0x80 + b - 1;
   939  0669  0874               	movf	Lcd_Set_Cursor@b,w
   940  066A  3E7F               	addlw	127
   941  066B  00F5               	movwf	??_Lcd_Set_Cursor
   942  066C  0875               	movf	??_Lcd_Set_Cursor,w
   943  066D  00FA               	movwf	Lcd_Set_Cursor@temp
   944                           
   945                           ;lcd.h: 47: z = temp>>4;
   946  066E  087A               	movf	Lcd_Set_Cursor@temp,w
   947  066F  00F5               	movwf	??_Lcd_Set_Cursor
   948  0670  3004               	movlw	4
   949  0671                     u215:	
   950  0671  1003               	clrc
   951  0672  0CF5               	rrf	??_Lcd_Set_Cursor,f
   952  0673  3EFF               	addlw	-1
   953  0674  1D03               	skipz
   954  0675  2E71               	goto	u215
   955  0676  0875               	movf	??_Lcd_Set_Cursor,w
   956  0677  00F6               	movwf	??_Lcd_Set_Cursor+1
   957  0678  0876               	movf	??_Lcd_Set_Cursor+1,w
   958  0679  00F8               	movwf	Lcd_Set_Cursor@z
   959                           
   960                           ;lcd.h: 48: y = temp & 0x0F;
   961  067A  087A               	movf	Lcd_Set_Cursor@temp,w
   962  067B  390F               	andlw	15
   963  067C  00F5               	movwf	??_Lcd_Set_Cursor
   964  067D  0875               	movf	??_Lcd_Set_Cursor,w
   965  067E  00F9               	movwf	Lcd_Set_Cursor@y
   966                           
   967                           ;lcd.h: 49: Lcd_Cmd(z);
   968  067F  0878               	movf	Lcd_Set_Cursor@z,w
   969  0680  120A  118A  25F0  120A  118A  	fcall	_Lcd_Cmd
   970                           
   971                           ;lcd.h: 50: Lcd_Cmd(y);
   972  0685  0879               	movf	Lcd_Set_Cursor@y,w
   973  0686  120A  118A  25F0   	fcall	_Lcd_Cmd
   974                           
   975                           ;lcd.h: 51: }
   976  0689  0008               	return
   977  068A                     l729:	
   978                           
   979                           ;lcd.h: 52: else if(a == 2)
   980  068A  3002               	movlw	2
   981  068B  0677               	xorwf	Lcd_Set_Cursor@a,w
   982  068C  1D03               	btfss	3,2
   983  068D  0008               	return
   984                           
   985                           ;lcd.h: 53: {
   986                           ;lcd.h: 54: temp = 0xC0 + b - 1;
   987  068E  0874               	movf	Lcd_Set_Cursor@b,w
   988  068F  3EBF               	addlw	191
   989  0690  00F5               	movwf	??_Lcd_Set_Cursor
   990  0691  0875               	movf	??_Lcd_Set_Cursor,w
   991  0692  00FA               	movwf	Lcd_Set_Cursor@temp
   992                           
   993                           ;lcd.h: 55: z = temp>>4;
   994  0693  087A               	movf	Lcd_Set_Cursor@temp,w
   995  0694  00F5               	movwf	??_Lcd_Set_Cursor
   996  0695  3004               	movlw	4
   997  0696                     u235:	
   998  0696  1003               	clrc
   999  0697  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1000  0698  3EFF               	addlw	-1
  1001  0699  1D03               	skipz
  1002  069A  2E96               	goto	u235
  1003  069B  0875               	movf	??_Lcd_Set_Cursor,w
  1004  069C  00F6               	movwf	??_Lcd_Set_Cursor+1
  1005  069D  0876               	movf	??_Lcd_Set_Cursor+1,w
  1006  069E  00F8               	movwf	Lcd_Set_Cursor@z
  1007                           
  1008                           ;lcd.h: 56: y = temp & 0x0F;
  1009  069F  087A               	movf	Lcd_Set_Cursor@temp,w
  1010  06A0  390F               	andlw	15
  1011  06A1  00F5               	movwf	??_Lcd_Set_Cursor
  1012  06A2  0875               	movf	??_Lcd_Set_Cursor,w
  1013  06A3  00F9               	movwf	Lcd_Set_Cursor@y
  1014                           
  1015                           ;lcd.h: 57: Lcd_Cmd(z);
  1016  06A4  0878               	movf	Lcd_Set_Cursor@z,w
  1017  06A5  120A  118A  25F0  120A  118A  	fcall	_Lcd_Cmd
  1018                           
  1019                           ;lcd.h: 58: Lcd_Cmd(y);
  1020  06AA  0879               	movf	Lcd_Set_Cursor@y,w
  1021  06AB  120A  118A  25F0   	fcall	_Lcd_Cmd
  1022  06AE  0008               	return
  1023  06AF                     __end_of_Lcd_Set_Cursor:	
  1024                           
  1025                           	psect	text6
  1026  06AF                     __ptext6:	
  1027 ;; *************** function _Lcd_Init *****************
  1028 ;; Defined at:
  1029 ;;		line 62 in file "lcd.h"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0, pclath, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1043 ;;      Params:         0       0       0       0       0
  1044 ;;      Locals:         0       0       0       0       0
  1045 ;;      Temps:          2       0       0       0       0
  1046 ;;      Totals:         2       0       0       0       0
  1047 ;;Total ram usage:        2 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; Hardware stack levels required when called:    2
  1050 ;; This function calls:
  1051 ;;		_Lcd_Cmd
  1052 ;;		_Lcd_Port
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           
  1059                           ;psect for function _Lcd_Init
  1060  06AF                     _Lcd_Init:	
  1061                           
  1062                           ;lcd.h: 64: Lcd_Port(0x00);
  1063                           
  1064                           ;incstack = 0
  1065                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1066  06AF  3000               	movlw	0
  1067  06B0  120A  118A  25D6  120A  118A  	fcall	_Lcd_Port
  1068                           
  1069                           ;lcd.h: 65: _delay((unsigned long)((20)*(20000000/4000.0)));
  1070  06B5  3082               	movlw	130
  1071  06B6  00F5               	movwf	??_Lcd_Init+1
  1072  06B7  30DD               	movlw	221
  1073  06B8  00F4               	movwf	??_Lcd_Init
  1074  06B9                     u367:	
  1075  06B9  0BF4               	decfsz	??_Lcd_Init,f
  1076  06BA  2EB9               	goto	u367
  1077  06BB  0BF5               	decfsz	??_Lcd_Init+1,f
  1078  06BC  2EB9               	goto	u367
  1079  06BD  2EBE               	nop2
  1080                           
  1081                           ;lcd.h: 66: Lcd_Cmd(0x03);
  1082  06BE  3003               	movlw	3
  1083  06BF  120A  118A  25F0  120A  118A  	fcall	_Lcd_Cmd
  1084                           
  1085                           ;lcd.h: 67: _delay((unsigned long)((5)*(20000000/4000.0)));
  1086  06C4  3021               	movlw	33
  1087  06C5  00F5               	movwf	??_Lcd_Init+1
  1088  06C6  3076               	movlw	118
  1089  06C7  00F4               	movwf	??_Lcd_Init
  1090  06C8                     u377:	
  1091  06C8  0BF4               	decfsz	??_Lcd_Init,f
  1092  06C9  2EC8               	goto	u377
  1093  06CA  0BF5               	decfsz	??_Lcd_Init+1,f
  1094  06CB  2EC8               	goto	u377
  1095  06CC  0000               	nop
  1096                           
  1097                           ;lcd.h: 68: Lcd_Cmd(0x03);
  1098  06CD  3003               	movlw	3
  1099  06CE  120A  118A  25F0  120A  118A  	fcall	_Lcd_Cmd
  1100                           
  1101                           ;lcd.h: 69: _delay((unsigned long)((11)*(20000000/4000.0)));
  1102  06D3  3048               	movlw	72
  1103  06D4  00F5               	movwf	??_Lcd_Init+1
  1104  06D5  306C               	movlw	108
  1105  06D6  00F4               	movwf	??_Lcd_Init
  1106  06D7                     u387:	
  1107  06D7  0BF4               	decfsz	??_Lcd_Init,f
  1108  06D8  2ED7               	goto	u387
  1109  06D9  0BF5               	decfsz	??_Lcd_Init+1,f
  1110  06DA  2ED7               	goto	u387
  1111  06DB  0000               	nop
  1112                           
  1113                           ;lcd.h: 70: Lcd_Cmd(0x03);
  1114  06DC  3003               	movlw	3
  1115  06DD  120A  118A  25F0  120A  118A  	fcall	_Lcd_Cmd
  1116                           
  1117                           ;lcd.h: 72: Lcd_Cmd(0x02);
  1118  06E2  3002               	movlw	2
  1119  06E3  120A  118A  25F0  120A  118A  	fcall	_Lcd_Cmd
  1120                           
  1121                           ;lcd.h: 73: Lcd_Cmd(0x02);
  1122  06E8  3002               	movlw	2
  1123  06E9  120A  118A  25F0  120A  118A  	fcall	_Lcd_Cmd
  1124                           
  1125                           ;lcd.h: 74: Lcd_Cmd(0x08);
  1126  06EE  3008               	movlw	8
  1127  06EF  120A  118A  25F0  120A  118A  	fcall	_Lcd_Cmd
  1128                           
  1129                           ;lcd.h: 75: Lcd_Cmd(0x00);
  1130  06F4  3000               	movlw	0
  1131  06F5  120A  118A  25F0  120A  118A  	fcall	_Lcd_Cmd
  1132                           
  1133                           ;lcd.h: 76: Lcd_Cmd(0x0C);
  1134  06FA  300C               	movlw	12
  1135  06FB  120A  118A  25F0  120A  118A  	fcall	_Lcd_Cmd
  1136                           
  1137                           ;lcd.h: 77: Lcd_Cmd(0x00);
  1138  0700  3000               	movlw	0
  1139  0701  120A  118A  25F0  120A  118A  	fcall	_Lcd_Cmd
  1140                           
  1141                           ;lcd.h: 78: Lcd_Cmd(0x06);
  1142  0706  3006               	movlw	6
  1143  0707  120A  118A  25F0   	fcall	_Lcd_Cmd
  1144  070A  0008               	return
  1145  070B                     __end_of_Lcd_Init:	
  1146                           
  1147                           	psect	text7
  1148  05B5                     __ptext7:	
  1149 ;; *************** function _Lcd_Clear *****************
  1150 ;; Defined at:
  1151 ;;		line 35 in file "lcd.h"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;		None
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  2   32[None  ] int 
  1158 ;; Registers used:
  1159 ;;		wreg, status,2, status,0, pclath, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1165 ;;      Params:         0       0       0       0       0
  1166 ;;      Locals:         0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0
  1168 ;;      Totals:         0       0       0       0       0
  1169 ;;Total ram usage:        0 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    2
  1172 ;; This function calls:
  1173 ;;		_Lcd_Cmd
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _Lcd_Clear
  1181  05B5                     _Lcd_Clear:	
  1182                           
  1183                           ;lcd.h: 37: Lcd_Cmd(0);
  1184                           
  1185                           ;incstack = 0
  1186                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1187  05B5  3000               	movlw	0
  1188  05B6  120A  118A  25F0  120A  118A  	fcall	_Lcd_Cmd
  1189                           
  1190                           ;lcd.h: 38: Lcd_Cmd(1);
  1191  05BB  3001               	movlw	1
  1192  05BC  120A  118A  25F0   	fcall	_Lcd_Cmd
  1193  05BF  0008               	return
  1194  05C0                     __end_of_Lcd_Clear:	
  1195                           
  1196                           	psect	text8
  1197  05F0                     __ptext8:	
  1198 ;; *************** function _Lcd_Cmd *****************
  1199 ;; Defined at:
  1200 ;;		line 26 in file "lcd.h"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  a               1    wreg     unsigned char 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  a               1    3[COMMON] unsigned char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0, pclath, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1214 ;;      Params:         0       0       0       0       0
  1215 ;;      Locals:         1       0       0       0       0
  1216 ;;      Temps:          2       0       0       0       0
  1217 ;;      Totals:         3       0       0       0       0
  1218 ;;Total ram usage:        3 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    1
  1221 ;; This function calls:
  1222 ;;		_Lcd_Port
  1223 ;; This function is called by:
  1224 ;;		_Lcd_Clear
  1225 ;;		_Lcd_Set_Cursor
  1226 ;;		_Lcd_Init
  1227 ;;		_Lcd_Shift_Right
  1228 ;;		_Lcd_Shift_Left
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           
  1233                           ;psect for function _Lcd_Cmd
  1234  05F0                     _Lcd_Cmd:	
  1235                           
  1236                           ;incstack = 0
  1237                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1238                           ;Lcd_Cmd@a stored from wreg
  1239  05F0  00F3               	movwf	Lcd_Cmd@a
  1240                           
  1241                           ;lcd.h: 28: RD2 = 0;
  1242  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1243  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1244  05F3  1108               	bcf	8,2	;volatile
  1245                           
  1246                           ;lcd.h: 29: Lcd_Port(a);
  1247  05F4  0873               	movf	Lcd_Cmd@a,w
  1248  05F5  120A  118A  25D6  120A  118A  	fcall	_Lcd_Port
  1249                           
  1250                           ;lcd.h: 30: RD3 = 1;
  1251  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  1252  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  1253  05FC  1588               	bsf	8,3	;volatile
  1254                           
  1255                           ;lcd.h: 31: _delay((unsigned long)((4)*(20000000/4000.0)));
  1256  05FD  301A               	movlw	26
  1257  05FE  00F2               	movwf	??_Lcd_Cmd+1
  1258  05FF  30F8               	movlw	248
  1259  0600  00F1               	movwf	??_Lcd_Cmd
  1260  0601                     u397:	
  1261  0601  0BF1               	decfsz	??_Lcd_Cmd,f
  1262  0602  2E01               	goto	u397
  1263  0603  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1264  0604  2E01               	goto	u397
  1265  0605  0000               	nop
  1266                           
  1267                           ;lcd.h: 32: RD3 = 0;
  1268  0606  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0607  1303               	bcf	3,6	;RP1=0, select bank0
  1270  0608  1188               	bcf	8,3	;volatile
  1271  0609  0008               	return
  1272  060A                     __end_of_Lcd_Cmd:	
  1273                           
  1274                           	psect	text9
  1275  05D6                     __ptext9:	
  1276 ;; *************** function _Lcd_Port *****************
  1277 ;; Defined at:
  1278 ;;		line 4 in file "lcd.h"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  a               1    wreg     unsigned char 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  a               1    0[COMMON] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       0       0       0       0
  1293 ;;      Locals:         1       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0
  1295 ;;      Totals:         1       0       0       0       0
  1296 ;;Total ram usage:        1 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; This function calls:
  1299 ;;		Nothing
  1300 ;; This function is called by:
  1301 ;;		_Lcd_Cmd
  1302 ;;		_Lcd_Init
  1303 ;;		_Lcd_Write_Char
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           
  1308                           ;psect for function _Lcd_Port
  1309  05D6                     _Lcd_Port:	
  1310                           
  1311                           ;incstack = 0
  1312                           ; Regs used in _Lcd_Port: [wreg]
  1313                           ;Lcd_Port@a stored from wreg
  1314  05D6  00F0               	movwf	Lcd_Port@a
  1315                           
  1316                           ;lcd.h: 6: if(a & 1)
  1317  05D7  1C70               	btfss	Lcd_Port@a,0
  1318  05D8  2DDD               	goto	l19
  1319                           
  1320                           ;lcd.h: 7: RD4 = 1;
  1321  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  1322  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  1323  05DB  1608               	bsf	8,4	;volatile
  1324  05DC  2DE0               	goto	l20
  1325  05DD                     l19:	
  1326                           
  1327                           ;lcd.h: 8: else
  1328                           ;lcd.h: 9: RD4 = 0;
  1329  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1330  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1331  05DF  1208               	bcf	8,4	;volatile
  1332  05E0                     l20:	
  1333                           
  1334                           ;lcd.h: 11: if(a & 2)
  1335  05E0  1CF0               	btfss	Lcd_Port@a,1
  1336  05E1  2DE4               	goto	l21
  1337                           
  1338                           ;lcd.h: 12: RD5 = 1;
  1339  05E2  1688               	bsf	8,5	;volatile
  1340  05E3  2DE5               	goto	l22
  1341  05E4                     l21:	
  1342                           
  1343                           ;lcd.h: 13: else
  1344                           ;lcd.h: 14: RD5 = 0;
  1345  05E4  1288               	bcf	8,5	;volatile
  1346  05E5                     l22:	
  1347                           
  1348                           ;lcd.h: 16: if(a & 4)
  1349  05E5  1D70               	btfss	Lcd_Port@a,2
  1350  05E6  2DE9               	goto	l23
  1351                           
  1352                           ;lcd.h: 17: RD6 = 1;
  1353  05E7  1708               	bsf	8,6	;volatile
  1354  05E8  2DEA               	goto	l24
  1355  05E9                     l23:	
  1356                           
  1357                           ;lcd.h: 18: else
  1358                           ;lcd.h: 19: RD6 = 0;
  1359  05E9  1308               	bcf	8,6	;volatile
  1360  05EA                     l24:	
  1361                           
  1362                           ;lcd.h: 21: if(a & 8)
  1363  05EA  1DF0               	btfss	Lcd_Port@a,3
  1364  05EB  2DEE               	goto	l25
  1365                           
  1366                           ;lcd.h: 22: RD7 = 1;
  1367  05EC  1788               	bsf	8,7	;volatile
  1368  05ED  0008               	return
  1369  05EE                     l25:	
  1370                           
  1371                           ;lcd.h: 23: else
  1372                           ;lcd.h: 24: RD7 = 0;
  1373  05EE  1388               	bcf	8,7	;volatile
  1374  05EF  0008               	return
  1375  05F0                     __end_of_Lcd_Port:	
  1376  007E                     btemp	set	126	;btemp
  1377  007E                     wtemp	set	126
  1378  007E                     wtemp0	set	126
  1379  0080                     wtemp1	set	128
  1380  0082                     wtemp2	set	130
  1381  0084                     wtemp3	set	132
  1382  0086                     wtemp4	set	134
  1383  0088                     wtemp5	set	136
  1384  007F                     wtemp6	set	127
  1385  007E                     ttemp	set	126
  1386  007E                     ttemp0	set	126
  1387  0081                     ttemp1	set	129
  1388  0084                     ttemp2	set	132
  1389  0087                     ttemp3	set	135
  1390  007F                     ttemp4	set	127
  1391  007E                     ltemp	set	126
  1392  007E                     ltemp0	set	126
  1393  0082                     ltemp1	set	130
  1394  0086                     ltemp2	set	134
  1395  0080                     ltemp3	set	128


Data Sizes:
    Strings     70
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[13]), STR_4(CODE[13]), STR_3(CODE[10]), STR_2(CODE[17]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1899
                                             11 COMMON     3     3      0
                                              0 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     403
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     698
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Dec 01 14:22:56 2016

                        pc 0002                __CFG_CP$OFF 0000                         l20 05E0  
                       l21 05E4                         l22 05E5                         l23 05E9  
                       l24 05EA                         l25 05EE                         l19 05DD  
                       fsr 0004                        l801 078B                        l823 07D6  
                      l815 07B5                        l729 068A                        l809 07AC  
                      l755 060D                        l765 0713                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        u215 0671  
                      u235 0696                        u307 0767                        u317 0791  
                      u327 07BB                        u337 07F5               __CFG_CPD$OFF 0000  
                      u347 064D                        u195 063D                        u357 065E  
                      u367 06B9                        u377 06C8                        u297 073A  
                      u387 06D7                        u397 0601                        fsr0 0004  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       STR_1 0009  
                     STR_2 001A                       STR_3 0045                       STR_4 002B  
                     STR_5 0038               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070  
                     _main 070B                       btemp 007E                       ltemp 007E  
                     start 0000                       ttemp 007E         ??_Lcd_Write_String 0075  
                     wtemp 007E            __end_of_Lcd_Cmd 060A                      ?_main 0070  
            __CFG_WDTE$OFF 0000    __size_of_Lcd_Set_Cursor 004A                      _TRISD 0088  
  __size_of_Lcd_Shift_Left 000B                      main@a 0020             __CFG_BOREN$OFF 0000  
                    pclath 000A                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080                      ttemp0 007E  
                    ttemp1 0081                      ttemp2 0084                      ttemp3 0087  
                    ttemp4 007F                      status 0003                      wtemp0 007E  
                    wtemp1 0080                      wtemp2 0082                      wtemp3 0084  
                    wtemp4 0086                      wtemp5 0088                      wtemp6 007F  
         __end_of_Lcd_Init 070B           __end_of_Lcd_Port 05F0            __initialization 07FC  
             __end_of_main 07FC                     ??_main 007B         __size_of_Lcd_Clear 000B  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0039             __CFG_PWRTE$OFF 0000  
 __size_of_Lcd_Shift_Right 000B            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074  
          Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 05C0             __pcstackCOMMON 0070             _Lcd_Set_Cursor 0665  
           _Lcd_Shift_Left 05C0                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pmaintext 070B  __size_of_Lcd_Write_String 0022     __end_of_Lcd_Set_Cursor 06AF  
   __end_of_Lcd_Shift_Left 05CB          ??_Lcd_Shift_Right 0074                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                 __stringtab 0003             _Lcd_Write_Char 062C  
                  _Lcd_Cmd 05F0            ?_Lcd_Set_Cursor 0074                    __ptext1 060A  
                  __ptext2 062C                    __ptext3 05CB                    __ptext4 05C0  
                  __ptext5 0665                    __ptext6 06AF                    __ptext7 05B5  
                  __ptext8 05F0                    __ptext9 05D6            ?_Lcd_Shift_Left 0070  
   __end_of_Lcd_Write_Char 0665       end_of_initialization 07FC                  Lcd_Port@a 0070  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
                _Lcd_Clear 05B5           _Lcd_Write_String 060A        start_initialization 07FC  
        __size_of_Lcd_Init 005C          __size_of_Lcd_Port 001A                 ?_Lcd_Clear 0070  
          _Lcd_Shift_Right 05CB            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
         ??_Lcd_Set_Cursor 0075           ??_Lcd_Shift_Left 0074                  __pstrings 0003  
  __end_of_Lcd_Shift_Right 05D6                   Lcd_Cmd@a 0073                ??_Lcd_Clear 0074  
              __stringbase 0008           ??_Lcd_Write_Char 0071                   _Lcd_Init 06AF  
                 _Lcd_Port 05D6   __end_of_Lcd_Write_String 062C           __size_of_Lcd_Cmd 001A  
       __end_of__stringtab 0009              __size_of_main 00F1           ?_Lcd_Shift_Right 0070  
       Lcd_Write_Char@temp 0072                  stringcode 0003         Lcd_Set_Cursor@temp 007A  
                 stringdir 0003                   stringtab 0003  
